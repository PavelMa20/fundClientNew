{"version":3,"sources":["actions/types.js","reducers/errorReducer.js","validation/is-empty.js","reducers/authReducer.js","reducers/index.js","store.js","setAuthToken.js","actions/authentication.js","components/Navbar.js","components/Register.js","components/Login.js","components/MainInput/MainInput.js","components/Sider/Sider.js","components/Table/TableDataColums.js","components/UpTable/UpTable.js","components/Uppload/Uppload.js","components/Download/Download.js","components/IdInput/IdInput.js","components/http-common.js","components/DocTable/DocTable.js","components/ColumnInput/ColumnInput.js","components/RenderCell.js","components/NamingTable/NamingTable.js","components/Layout/Layout.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","SET_CURRENT_USER","initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","user","combineReducers","errors","state","action","type","payload","auth","store","createStore","rootReducer","compose","applyMiddleware","thunk","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","Navbar","e","preventDefault","this","props","authLinks","className","href","onClick","onLogout","bind","src","avatar","alt","name","title","style","width","marginRight","guestLinks","to","id","Component","connect","withRouter","Register","email","password","password_confirm","handleInputChange","handleSubmit","setState","target","registerUser","nextProps","marginTop","marginBottom","onSubmit","placeholder","classnames","onChange","post","then","res","catch","err","response","data","Login","loginUser","setItem","jwt_decode","Option","Select","React","SubMenu","Menu","Sider","theme","current","changeTheme","handleClick","console","log","key","height","defaultOpenKeys","selectedKeys","mode","icon","FilePdfOutlined","Item","EditableContext","createContext","EditableRow","index","Form","useForm","form","component","Provider","EditableCell","editable","children","dataIndex","record","handleSave","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","childNode","margin","rules","required","message","ref","onPressEnter","onBlur","paddingRight","UPLOAD_PROPS","accept","authorization","Uppload","handleChange","beforeUpload","fileInput","createRef","info","file","status","fileList","success","error","f","reader","FileReader","onload","result","workbook","XLSX","read","first_worksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","resultArray","i","objArray","j","obj","onUpload","readAsBinaryString","maxCount","UploadOutlined","PureComponent","ButtonSize","disabled","shape","DownloadOutlined","IdInput","setTemplateId","marginLeft","create","baseURL","DocTable","headerArray","docArray","onGet","columnArray","dataArray","columns","s","object","fKey","fValue","align","dataSource","pagination","pageSize","scroll","y","ColumnInput","onName","setColumnName","setFirstElement","options","newValue","actionMeta","columnName","indexOf","firstElement","RenderCell","preffixAndPostfix","dataCell","preffix","postfix","NamingTable","handleDelete","filter","item","handleAdd","count","newData","age","row","findIndex","splice","setPreffix","setPostfix","render","nameArray","components","body","cell","map","col","onCell","rowClassName","bordered","defaultPageSize","hideOnSinglePage","fileDownload","require","Layout","templateId","setResultArray","label","printTemplateId","http","responseType","zipFile","display","Home","jwtToken","currentTime","Date","now","exp","window","location","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc1c8012.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action ) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    }\r\n}","const isEmpty = (value) => {\r\n    return (\r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0)\r\n    );\r\n}\r\nexport default isEmpty;","import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../validation/is-empty';\r\n\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nexport default function(state = initialState, action ) {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    auth: authReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst inititalState = {};\r\n\r\nconst store = createStore(\r\n        rootReducer, \r\n        inititalState, \r\n        compose(applyMiddleware(thunk)));\r\n              // window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport setAuthToken from '../setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const registerUser = (user, history) => dispatch => {\r\n    axios.post('/api/users/register', user)\r\n            .then(res => history.push('/login'))\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n}\r\n\r\nexport const loginUser = (user) => dispatch => {\r\n    axios.post('/api/users/login', user)\r\n            .then(res => {\r\n                const { token } = res.data;\r\n                localStorage.setItem('jwtToken', token);\r\n                setAuthToken(token);\r\n                const decoded = jwt_decode(token);\r\n                dispatch(setCurrentUser(decoded));\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n}\r\n\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n}\r\n\r\nexport const logoutUser = (history) => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n    history.push('/login');\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../actions/authentication';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n    onLogout(e) {\r\n        e.preventDefault();\r\n        this.props.logoutUser(this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated, user} = this.props.auth;\r\n        const authLinks = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <a href=\"#\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>\r\n                    <img src={user.avatar} alt={user.name} title={user.name}\r\n                        className=\"rounded-circle\"\r\n                        style={{ width: '25px', marginRight: '5px'}} />\r\n                            Logout\r\n                </a>\r\n            </ul>\r\n        )\r\n      const guestLinks = (\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">Sign In</Link>\r\n            </li>\r\n        </ul>\r\n      )\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n                <Link className=\"navbar-brand\" to=\"/\">Pdf Generator Api</Link>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    {isAuthenticated ? authLinks : guestLinks}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { registerUser } from '../actions/authentication';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirm: '',\r\n            errors: {}\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password_confirm: this.state.password_confirm\r\n        }\r\n        this.props.registerUser(user, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.auth.isAuthenticated) {\r\n            this.props.history.push('/')\r\n        }\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return(\r\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\r\n            <h2 style={{marginBottom: '40px'}}>Registration</h2>\r\n            <form onSubmit={ this.handleSubmit }>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.name\r\n                    })}\r\n                    name=\"name\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.name }\r\n                    />\r\n                    {errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.email\r\n                    })}\r\n                    name=\"email\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.email }\r\n                    />\r\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.password\r\n                    })}\r\n                    name=\"password\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password }\r\n                    />\r\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.password_confirm\r\n                    })}\r\n                    name=\"password_confirm\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password_confirm }\r\n                    />\r\n                    {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Register User\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../actions/authentication';\r\nimport classnames from 'classnames';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        }\r\n        this.props.loginUser(user);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.auth.isAuthenticated) {\r\n            this.props.history.push('/dashboard')\r\n        }\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return(\r\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\r\n            <h2 style={{marginBottom: '40px'}}>Login</h2>\r\n            <form onSubmit={ this.handleSubmit }>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.email\r\n                    })}\r\n                    name=\"email\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.email }\r\n                    />\r\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.password\r\n                    })} \r\n                    name=\"password\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password }\r\n                    />\r\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Login User\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n})\r\n\r\nexport  default connect(mapStateToProps, { loginUser })(Login)","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './MainInput.css';\r\nimport { Input, Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\nclass MainInput extends React.Component {\r\nrender() {\r\n    return (\r\n\r\n    <Select defaultValue=\"Option2-2\">\r\n    <Option value=\"Option2-1\">Option2-1</Option>\r\n    <Option value=\"Option2-2\">Option2-2</Option>\r\n  </Select>\r\n   \r\n\r\n\r\n    )}\r\n}\r\nexport default MainInput;","import { Menu, Switch } from 'antd';\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined, FilePdfOutlined  } from '@ant-design/icons';\r\nimport ReactDOM from 'react-dom';\r\nimport React, { Component } from 'react';\r\nimport './Sider.css';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Sider extends React.Component {\r\n  state = {\r\n    theme: 'dark',\r\n    current: '1',\r\n  };\r\n\r\n  changeTheme = value => {\r\n    this.setState({\r\n      theme: value ? 'dark' : 'light',\r\n    });\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <Switch\r\n          checked={this.state.theme === 'dark'}\r\n          onChange={this.changeTheme}\r\n          checkedChildren=\"Dark\"\r\n          unCheckedChildren=\"Light\"\r\n        /> */}\r\n        \r\n        <Menu\r\n          theme={this.state.theme}\r\n          onClick={this.handleClick}\r\n          style={{ width: 256 },{height:'100vh'}}\r\n          defaultOpenKeys={['sub1']}\r\n          selectedKeys={[this.state.current]}\r\n          mode=\"inline\"\r\n        >\r\n          <SubMenu key=\"sub1\" icon={<FilePdfOutlined />} title=\"Create PDF\">\r\n            <Menu.Item key=\"1\">Upload data</Menu.Item>\r\n            {/* <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item> */}\r\n          </SubMenu>\r\n          {/* <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation \">\r\n            <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n            <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n            <SubMenu key=\"sub3\" title=\"Submenu\">\r\n              <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n              <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n            </SubMenu>\r\n          </SubMenu>\r\n          <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation \">\r\n            <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n            <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n            <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n            <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n          </SubMenu> */}\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//ReactDOM.render(<Sider />, mountNode);\r\n\r\nexport default Sider;","\r\nimport React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Table.css';\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from 'antd';\r\nimport {DeleteOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'Column name',\r\n                dataIndex: 'ColumnName',\r\n                width: '30%',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'Data type',\r\n                dataIndex: 'DataType',\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n                        <Select defaultValue=\"Abc\">\r\n                            <Option value=\"Abc\">Abc</Option>\r\n                            <Option value=\"123\">123</Option>\r\n                            <Option value=\"%\">%</Option>\r\n\r\n                        </Select>\r\n                    </div>\r\n\r\n            },\r\n\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'operation',\r\n                render: (_, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                            <a><DeleteOutlined /></a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: '0',\r\n                    ColumnName: 'Investor #',\r\n                    DataType: 'Abc',\r\n\r\n                },\r\n                {\r\n                    key: '1',\r\n                    ColumnName: 'Investor Name',\r\n                    DataType: 'Abc',\r\n                },\r\n            ],\r\n            count: 2,\r\n        };\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: '32',\r\n\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                    pagination={{ defaultPageSize: 10, hideOnSinglePage: true }}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                />\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n\r\n                    style={{\r\n                        marginLeft: 0,\r\n                        marginTop: 10,\r\n                      \r\n                    }}\r\n                >\r\n                    Add a row\r\n          </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable;\r\n\r\n","import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Popconfirm, Form, Select, DatePicker, Space } from 'antd';\r\nconst { Option } = Select;\r\n\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\n\r\nclass UpTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            // {\r\n            //     title: 'Fund',\r\n            //     dataIndex: 'name',\r\n            //     width: '20%',\r\n            //     render: () =>\r\n            //         <div className=\"site-input-group-wrapper\">\r\n            //             <Select defaultValue=\"Abc\">\r\n            //                 <Option value=\"Abc\">Abc</Option>\r\n            //                 <Option value=\"123\">123</Option>\r\n            //                 <Option value=\"%\">%</Option>\r\n\r\n            //             </Select>\r\n            //         </div>\r\n            // },\r\n            {\r\n                title: 'Document type',\r\n                dataIndex: 'DocumentType',\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n                        <Select defaultValue=\"CapitalCall\"    style={{ minWidth: 160,}} onChange={value => this.setState({\r\n                            docType: value\r\n                        })}>\r\n                            <Option value=\"CapitalCall\">Capital Call</Option> //Numeric\r\n                            <Option value=\"CapitalAccount\">Capital Account</Option> //Periodic\r\n                            <Option value=\"CatchUpCall\">Catch-Up Call</Option> //Numeric \r\n                            <Option value=\"K1\">K-1</Option> //Periodic\r\n\r\n                        </Select>\r\n                    </div>\r\n            },\r\n            {\r\n                title: 'Periodic or Numeric?',\r\n                dataIndex: 'PeriodicorNumeric',\r\n                render: () =>\r\n                       \r\n                    <div >\r\n                        \r\n                       \r\n                        {this.checkTableValue(this.state.docType)}\r\n                        </div>\r\n\r\n\r\n            },\r\n            {\r\n                title: 'Document Number',\r\n                dataIndex: 'DocumentNumber',\r\n                name: 'documentNumber',\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n\r\n                        <Select defaultValue=\"1\">\r\n                            <Option value=\"1\">1</Option>\r\n                            <Option value=\"2\">2</Option>\r\n                            <Option value=\"3\">3</Option>\r\n                            <Option value=\"4\">4</Option>\r\n                            <Option value=\"5\">5</Option>\r\n                            <Option value=\"6\">6</Option>\r\n                            <Option value=\"7\">7</Option>\r\n                            <Option value=\"8\">8</Option>\r\n                            <Option value=\"9\">9</Option>\r\n                            <Option value=\"10\">10</Option>\r\n                            <Option value=\"11\">11</Option>\r\n                            <Option value=\"12\">12</Option>\r\n                            <Option value=\"13\">13</Option>\r\n                            <Option value=\"14\">14</Option>\r\n                            <Option value=\"15\">15</Option>\r\n                            <Option value=\"16\">16</Option>\r\n                            <Option value=\"17\">17</Option>\r\n                            <Option value=\"18\">18</Option>\r\n                            <Option value=\"19\">19</Option>\r\n                            <Option value=\"20\">20</Option>\r\n                        </Select>\r\n\r\n\r\n                    </div>\r\n            }, {\r\n                title: 'Quarter',\r\n                dataIndex: 'quarter',\r\n                name: 'quarter',\r\n\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n\r\n                        <Select defaultValue=\"Q1\">\r\n                            <Option value=\"Q1\">Q1</Option>\r\n                            <Option value=\"Q2\">Q2</Option>\r\n                            <Option value=\"Q3\">Q3</Option>\r\n                            <Option value=\"Q4\">Q4</Option>\r\n                        </Select>\r\n\r\n                    </div>\r\n\r\n            }, {\r\n                title: 'Year',\r\n                dataIndex: 'year',\r\n                name: 'year',\r\n\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n\r\n                        <Space direction=\"vertical\" size={12}>\r\n                            <DatePicker picker=\"year\" bordered={false} />\r\n                        </Space>\r\n\r\n\r\n                    </div>\r\n\r\n            },\r\n            {\r\n                title: 'Name the ',\r\n                dataIndex: 'DocumentName',\r\n                editable: true,\r\n                render:() => \r\n                <Input placeholder=\"Basic usage\"  style={{\r\n                    marginLeft: 20,\r\n                }}/>\r\n            },\r\n\r\n        ];\r\n        this.state = {\r\n            docType: \" \",\r\n            dataSource: [\r\n                {\r\n                  \r\n                },\r\n            ],\r\n            count: 1,\r\n        };\r\n    }\r\n    checkType() {\r\n        if (this.checkTableValue(this.state.docType) === \"numeric\") {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    checkTableValue(value) {\r\n        console.log(value);\r\n        if (value == \"CapitalCall\") {\r\n            return (\"Numeric\")\r\n        } else if (value == \"CatchUpCall\") {\r\n            return (\"Numeric\")\r\n        } else if (value == \"CapitalAccount\") {\r\n            return (\"Periodic\")\r\n        } else if (value == \"K1\") {\r\n            return (\"Periodic\")\r\n        }\r\n    }\r\n\r\n\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n    \r\n\r\n           //const columnsToPassToTable =  this.columns.filter(column => this.checkTableValue(this.state.docType) !== 'Periodic' || column.name !== 'documentNumber');\r\n          \r\n    render() {\r\n        \r\n        const columnsToPassToTable = this.columns.filter(column => {\r\n            if (this.checkTableValue(this.state.docType) === 'Periodic') {\r\n               return column.name !== 'documentNumber';\r\n             }\r\n           \r\n             if (this.checkTableValue(this.state.docType) === 'Numeric') {\r\n               return column.name !== 'quarter' && column.name !== 'year';\r\n             }\r\n           \r\n             return true;\r\n           })\r\n        const { dataSource } = this.state;\r\n        console.log(dataSource);\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columnsToPassToTable}\r\n                    pagination={{ defaultPageSize: 10, hideOnSinglePage: true }}\r\n                    style={{\r\n                        margin: 20,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UpTable;","'use strict';\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Uppload.css';\r\nimport { Upload, message, Button} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport XLSX from \"xlsx\";\r\n\r\n\r\n\r\n\r\n\r\n// const props = {\r\n  // accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  // name: 'file',\r\n  // headers: {\r\n  //   authorization: 'authorization-text',\r\n  // },\r\n\r\n//   showUploadList: true,\r\n//   onChange(info) {\r\n//     if (info.file.status !== 'uploading') {\r\n//       console.log(info.file, info.fileList);\r\n//     }\r\n//     if (info.file.status === 'done') {\r\n//       message.success(`${info.file.name} file uploaded successfully`);\r\n//     } else if (info.file.status === 'error') {\r\n//       message.error(`${info.file.name} file upload failed.`);\r\n//     }\r\n//   },\r\n//   beforeUpload: (file, fileList) => {\r\n\r\n//     var rABS = true;\r\n//     const f = fileList[0];\r\n//     var reader = new FileReader();\r\n//     reader.onload = function (e) {\r\n//       var data = e.target.result;\r\n\r\n//       var workbook = XLSX.read(data, {\r\n//         type: rABS ? 'binary' : 'array'\r\n//       });\r\n//       var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n//       var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\r\n\r\n//       let resultArray = [];\r\n//       console.log(jsonArr);\r\n//       console.log(jsonArr.length);\r\n//       console.log(jsonArr[0].length);\r\n//       for (let i = 1; i < jsonArr.length; i++) {\r\n//         var objArray = [];\r\n//         for (let j = 0; j < jsonArr[0].length; j++) {\r\n//           var obj = new Object;\r\n//           obj = { key: jsonArr[0][j], value: jsonArr[i][j] };\r\n//           objArray.push(obj);\r\n//         }\r\n//         resultArray.push(objArray);\r\n\r\n//       }\r\n//       console.log(resultArray);\r\n\r\n//       http.post(\"/prejson\", resultArray);\r\n\r\n//     };\r\n//     if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n//     return false;\r\n//   }\r\n\r\n// };\r\n\r\nconst UPLOAD_PROPS = {\r\n  accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  name: 'file',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Uppload extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.beforeUpload = this.beforeUpload.bind(this);\r\n    this.fileInput = React.createRef();     \r\n    \r\n  }\r\n\r\n\r\n  handleChange(info) {\r\n    \r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList,\"arsi\");\r\n     \r\n    }\r\n   \r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  \r\n    \r\n  \r\n  }\r\n  \r\n\r\n  beforeUpload(file, fileList) {\r\n    var rABS = true;\r\n    const f = fileList[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n   \r\n      var data = e.target.result;\r\n\r\n      var workbook = XLSX.read(data, {\r\n        type: rABS ? 'binary' : 'array'\r\n      });\r\n      var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\r\n     \r\n\r\n      let resultArray = [];\r\n      console.log(jsonArr);\r\n      console.log(jsonArr.length);\r\n      console.log(jsonArr[0].length);\r\n      for (let i = 1; i < jsonArr.length; i++) {\r\n        var objArray = [];\r\n        for (let j = 0; j < jsonArr[0].length; j++) {\r\n          var obj = new Object;\r\n          obj = { key: jsonArr[0][j], value: jsonArr[i][j] };\r\n          objArray.push(obj);\r\n        }\r\n        resultArray.push(objArray);\r\n\r\n      }\r\n\r\n      this.props.onUpload?.(resultArray);\r\n\r\n      // http.post(\"/prejson\", resultArray);\r\n\r\n    }.bind(this);\r\n    if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n    return false;\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n            \r\n    return (\r\n\r\n      <Upload\r\n        {...UPLOAD_PROPS}\r\n        onChange={this.handleChange}\r\n        beforeUpload={this.beforeUpload}\r\n        maxCount={1}\r\n       \r\n      \r\n        \r\n      >\r\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n     \r\n        {/* <input\r\n          type=\"file\"\r\n          hidden\r\n          accept={SheetJSFT}\r\n          ref={this.fileInput}\r\n          onChange={this.handleChange}\r\n\r\n        /> */}\r\n      </Upload>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst SheetJSFT = [\r\n  \"xlsx\",\r\n  \"xlsm\",\r\n  \"xls\",\r\n  \"csv\",\r\n\r\n]\r\nexport default Uppload;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Download.css';\r\nimport { Button } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nconst ButtonSize = ({ onClick, disabled }) => (\r\n  <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} onClick={onClick} disabled={disabled}>\r\n    Download\r\n  </Button>\r\n)\r\n// ButtonSize.propTypes = {\r\n//     templateId: PropTypes.number,\r\n// }\r\nexport default ButtonSize;","\r\nimport React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\nimport './IdInput.css';\r\n\r\nconst IdInput = ({ setTemplateId }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Input placeholder=\"Input Temlate #\" style={{\r\n                marginLeft: 20,\r\n                width: 200,\r\n            }} onChange={(e) => setTemplateId(e.target.value)} />\r\n        </div>\r\n    )\r\n}\r\nexport default IdInput;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3000/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\n\r\nconst DocTable = ({ onGet }) => {\r\n\r\n    let docArray = onGet;\r\n    let columnArray = [];\r\n    let headerArray = [];\r\n    let dataArray = [];\r\n    let columns = [];\r\n    let data = [];\r\n\r\n   // console.log(docArray);\r\n    headerArray = docArray[0];\r\n    //console.log(headerArray);\r\n    for (var key in headerArray) {\r\n        let s = headerArray[key];\r\n\r\n        columnArray.push(Object.values(s)[0]);\r\n    }\r\n    console.log(columnArray);\r\n\r\n    for (let i = 0; i < docArray.length; i++) {\r\n        dataArray = docArray[i];\r\n        let object = new Object();\r\n        for (let j = 0; j < dataArray.length; j++) {\r\n            let fKey;\r\n            let fValue;\r\n            fKey = Object.values(dataArray[j])[0];\r\n         \r\n          //  console.log(fKey);\r\n            fValue = Object.values(dataArray[j])[1];\r\n          //  console.log(fValue);\r\n            var propertyName = fKey;\r\n           object[propertyName] = fValue;\r\n        }\r\n        object.key = i;\r\n        //console.log(object);\r\n        \r\n        data.push(object);\r\n    }\r\n  //  console.log(data);\r\n\r\n    for (let i = 0; i < columnArray.length; i++) {\r\n\r\n        columns.push(\r\n            {\r\n                title: columnArray[i],\r\n                dataIndex: columnArray[i],\r\n                width: '100vw'/i,\r\n                align: 'center',\r\n                margin: '1em'\r\n                \r\n              \r\n                \r\n            }\r\n        )\r\n    }\r\n    console.log(columns);\r\n    //    let columns = [\r\n\r\n\r\n    //         {\r\n    //           title: 'Name',\r\n    //           dataIndex: 'name',\r\n    //           width: 150,\r\n    //         },\r\n    //         {\r\n    //           title: 'Age',\r\n    //           dataIndex: 'age',\r\n    //           width: 150,\r\n    //         },\r\n    //         {\r\n    //           title: 'Address',\r\n    //           dataIndex: 'address',\r\n    //         },\r\n    //       ];\r\n\r\n\r\n\r\n    // for (let i = 0; i < 100; i++) {\r\n    //   data.push({\r\n    //     key: i,\r\n    //     name: `Edward King ${i}`,\r\n    //     age: 32,\r\n    //     address: `London, Park Lane no. ${i}`,\r\n    //   });\r\n    // }\r\n\r\n    return (\r\n\r\n        <Table  columns={columns} dataSource={data} pagination={{ pageSize: 50 }} scroll={{ y: 240 }} />\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default DocTable;","import React from 'react';\r\nimport Select from 'react-select'\r\n\r\n\r\nconst ColumnInput=({onName,setColumnName,resultArray,setFirstElement})=>{\r\n   \r\n     console.log(onName);\r\n     console.log(resultArray);\r\n const sendName=(newValue, actionMeta) =>{\r\n     console.log(newValue);\r\n     console.log(`action: ${actionMeta.action}`);\r\n     let columnName = newValue.value;\r\n     setColumnName(columnName);\r\n     console.log(resultArray[0]);\r\n     let index = onName.indexOf(newValue);\r\n     console.log(index);\r\n     let object = resultArray[0][index];\r\n     console.log(object);\r\n     let firstElement = Object.values(object)[1];\r\n     console.log(firstElement);\r\n     setFirstElement(firstElement);\r\n    \r\n    \r\n     \r\n    \r\n }\r\n\r\n    return(\r\n        <Select options ={onName} onChange={sendName}/>\r\n    )\r\n    \r\n}\r\n\r\nexport default ColumnInput;","import React from 'react';\r\n\r\n\r\nconst RenderCell=(preffixAndPostfix)=>{\r\n    let dataCell = preffixAndPostfix;\r\n    console.log(dataCell);\r\n    console.log(dataCell.preffixAndPostfix.dataSource[0].preffix);\r\n     let preffix = dataCell.preffixAndPostfix.dataSource[0].preffix ;\r\n      let postfix = dataCell.preffixAndPostfix.dataSource[0].postfix;\r\n     let firstElement = dataCell.preffixAndPostfix.firstElement;\r\n console.log(preffix);\r\n console.log(postfix);\r\nconsole.log(firstElement);\r\n\r\n\r\n\r\nreturn(\r\n    <div>{preffix}{firstElement}{postfix}.pdf </div>\r\n)\r\n}\r\nexport default RenderCell;","import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './NamingTable.css';\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport ColumnInput from '../ColumnInput/ColumnInput';\r\nimport RenderCell from '../RenderCell';\r\nconst { Option } = Select;\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass NamingTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'Preffix',\r\n                dataIndex: 'preffix',\r\n                width: '30%',\r\n                editable: true,\r\n\r\n\r\n            },\r\n            {\r\n                title: 'Column Value',\r\n                dataIndex: 'Columnvalue',\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n                        {/* <Select defaultValue=\"Abc\">\r\n                            <Option value=\"Abc\">Abc</Option>\r\n                            <Option value=\"123\">123</Option>\r\n                            <Option value=\"%\">%</Option>\r\n\r\n                        </Select> */}\r\n\r\n                        <ColumnInput onName={this.props.nameArray} setColumnName={this.props.setColumnName} resultArray={this.props.resultArray} setFirstElement={this.setFirstElement} />\r\n                    </div>\r\n\r\n            },\r\n\r\n            {\r\n                title: 'Postfix',\r\n                dataIndex: 'postfix',\r\n                width: '30%',\r\n                editable: true,\r\n\r\n\r\n\r\n            },\r\n\r\n\r\n            {\r\n                title: 'PDF name example',\r\n                dataIndex: 'PDFnameexample',\r\n                width: '30%',\r\n                render: () =>\r\n                    <div>\r\n                      <RenderCell preffixAndPostfix={this.state}  />          \r\n                    </div>\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    // preffix: this.props.preffix,\r\n                    // postfix: this.props.postfix,\r\n\r\n                },\r\n\r\n            ],\r\n            count: 1,\r\n            firstElement: '',\r\n\r\n        };\r\n    }\r\n \r\n    setFirstElement = (value) => {\r\n        console.log(value);\r\n        this.setState({ firstElement: value });\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: '32',\r\n\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        console.log(newData[0].preffix);\r\n        console.log(item);\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n        this.props.setPreffix(newData[0].preffix);\r\n        this.props.setPostfix(newData[0].postfix);\r\n        \r\n\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                    pagination={{ defaultPageSize: 10, hideOnSinglePage: true }}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NamingTable;","\r\nimport React, { Component } from 'react';\r\nimport MainInput from '../MainInput/MainInput';\r\nimport Sider from '../Sider/Sider';\r\nimport EditableTable from '../Table/TableDataColums';\r\nimport UpTable from '../UpTable/UpTable';\r\nimport { Input } from 'antd';\r\nimport './Layout.css';\r\nimport Uppload from '../Uppload/Uppload';\r\nimport ButtonSize from '../Download/Download';\r\nimport IdInput from '../IdInput/IdInput';\r\nimport http from \"../http-common\";\r\nimport DocTable from '../DocTable/DocTable';\r\nimport ColumnInput from '../ColumnInput/ColumnInput';\r\nimport NamingTable from '../NamingTable/NamingTable';\r\nvar fileDownload = require('react-file-download');\r\n\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.style = {\r\n            display: props.display\r\n\r\n        }\r\n\r\n        this.state = {\r\n            templateId: '',\r\n            resultArray: [],\r\n            zipFile: null,\r\n            nameArray: [],\r\n            columnName: '',\r\n            preffix:'',\r\n            postfix:'',\r\n\r\n        }\r\n    }\r\n    setPreffix=(value)=>{\r\n        console.log(value);\r\n        this.setState({preffix: value})\r\n    }\r\n    setPostfix=(value)=>{\r\n        console.log(value);\r\n        this.setState({postfix: value})\r\n    }\r\n\r\n    setColumnName = (value) => {\r\n        console.log(value);\r\n        this.setState({ columnName: value });\r\n        console.log(\"kek\");\r\n        console.log(this.state.columnName);\r\n    }\r\n\r\n    setTemplateId = (value) => {\r\n        this.setState({ templateId: value });\r\n        console.log(this.state.templateId);\r\n    }\r\n    setResultArray = (resultArray) => {\r\n        this.setState({ resultArray });\r\n       let obj = resultArray[0];\r\n        for (let i = 0; i < obj.length; i++) {\r\n            let key = Object.values(obj[i])[0];\r\n            let object = { value: key, label: key }\r\n\r\n            this.state.nameArray.push(object);\r\n        }\r\n\r\n        console.log(this.state.nameArray);\r\n    }\r\n\r\n\r\n    printTemplateId = () => {\r\n        console.log(this.state);\r\n        http.post(\"/prejson\", { data: this.state }, { responseType: \"arraybuffer\" }\r\n        ).then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            fileDownload(res.data, 'filename.zip');\r\n\r\n\r\n        })\r\n        console.log(this.state.zipFile);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div style={this.style}>\r\n                {/* <header ></header> */}\r\n\r\n                <div className=\"asmain\">\r\n\r\n                    <aside >\r\n                        <Sider />\r\n                    </aside>\r\n                    <main>\r\n                        {/* <br/>\r\n            <h3>Choose Fund</h3>\r\n            <br/>\r\n            <div className=\"mainInput\">\r\n                <MainInput />\r\n                <Input placeholder=\"New fund name\"  style={{\r\n                        marginLeft: 20,\r\n                        width: 200,\r\n                    }}/>\r\n            </div>\r\n            <br/>\r\n            <h3>Choose document type</h3>\r\n            <br/>\r\n            <div className=\"tableup\" >\r\n                <UpTable />\r\n                </div>\r\n\r\n            <h3>Specify data columns</h3>\r\n                <br/>  */  }      \r\n                {/* <div className=\"tableedit\">\r\n                <EditableTable />\r\n                </div>  */}\r\n                        <br />\r\n                        <h3>Upload Excel/CSV with data</h3>\r\n                        <br />\r\n                        <div className=\"uppload\">\r\n                            <Uppload onUpload={this.setResultArray} />\r\n\r\n                        </div>\r\n\r\n                        <br />\r\n                        <h3>Data Preview</h3>\r\n                        <div><DocTable className=\"docContainer\" onGet={this.state.resultArray} /></div>\r\n                        <br />\r\n\r\n\r\n\r\n                        \r\n                        <h3>Input PDF template #</h3>\r\n                        <br />\r\n\r\n                        <br />\r\n                        <div className=\"pdftemplate\">\r\n                            <IdInput setTemplateId={this.setTemplateId} />\r\n                        </div>\r\n                        <br />\r\n                        <h3>Choose PDF's Naming Column</h3>\r\n                        <br />\r\n                        <br />\r\n                        <div>\r\n                            <NamingTable nameArray={this.state.nameArray} setColumnName={this.setColumnName} setPreffix={this.setPreffix} setPostfix={this.setPostfix} resultArray={this.state.resultArray}/>\r\n                        </div>\r\n\r\n                        <div className=\"nameInput\" style={{\r\n                            marginLeft: 20,\r\n                            width: 200,\r\n                        }}>\r\n                            {/* <ColumnInput onName={this.state.nameArray} setColumnName={this.setColumnName} /> */}\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <br />\r\n                        <div className=\"download\" style={{\r\n                            marginLeft: 20,\r\n                        }}>\r\n                            <ButtonSize onClick={this.printTemplateId} disabled={this.state.templateId.length !== 6 || this.state.resultArray.length === 0 || this.state.columnName.length===0 } />\r\n                            \r\n                        </div>\r\n\r\n\r\n                    </main>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport Layout from './Layout/Layout';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Layout />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = { store }>\n        <Router>\n            <div>\n             <div className=\"navi\" > <Navbar /></div>\n                <Route exact path=\"/dashboard\" component={ Home } />\n                <div className=\"container\">\n                  <Route exact path=\"/register\" component={ Register } />\n                  <Route exact path=\"/login\" component={ Login } />\n                </div>\n            </div>\n          </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
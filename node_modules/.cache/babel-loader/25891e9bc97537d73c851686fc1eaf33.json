{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebReact\\\\FundTest\\\\fundclient\\\\src\\\\components\\\\Uppload\\\\Uppload.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './Uppload.css';\nimport { Upload, message, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst props = {\n  // name: 'file',\n  //  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  // headers: {\n  //    authorization: 'authorization-text',\n  // },\n  // onChange(info) {\n  //   if (info.file.status !== 'uploading') {\n  //     console.log(info.file, info.fileList);\n  //   }\n  //   if (info.file.status === 'done') {\n  //     message.success(`${info.file.name} file uploaded successfully`);\n  //   } else if (info.file.status === 'error') {\n  //     message.error(`${info.file.name} file upload failed.`);\n  //   }\n  //   const reader = new FileReader();\n  // const rABS = !!reader.readAsBinaryString;\n  //        const workBook = XLSX.read(info.fileList[0],{ type: rABS ? \"binary\" : \"array\" });\n  //        const workSheetName = workBook.SheetNames[0];\n  //        const workSheet = workBook.Sheets[workSheetName];\n  //        const data = XLSX.utils.sheet_add_json(workSheet,{header: 1});\n  //        console.log(data);\n  // },\n  accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  name: 'file',\n  headers: {\n    authorization: 'authorization-text'\n  },\n  showUploadList: false,\n  beforeUpload: (file, fileList) => {\n    var rABS = true;\n    const f = fileList[0];\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      var data = e.target.result;\n      var workbook = XLSX.read(data, {\n        type: rABS ? 'binary' : 'array'\n      });\n      var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, {\n        header: 1\n      });\n      console.log(jsonArr);\n    };\n\n    if (rABS) reader.readAsBinaryString(f);else reader.readAsArrayBuffer(f);\n    return false;\n  }\n};\n\nclass Uppload extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Upload, { ...props,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }, this),\n        children: \"Click to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Uppload;","map":{"version":3,"sources":["D:/WebReact/FundTest/fundclient/src/components/Uppload/Uppload.js"],"names":["React","Upload","message","Button","UploadOutlined","XLSX","props","accept","name","headers","authorization","showUploadList","beforeUpload","file","fileList","rABS","f","reader","FileReader","onload","e","data","target","result","workbook","read","type","first_worksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","console","log","readAsBinaryString","readAsArrayBuffer","Uppload","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,MAAxC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAIC,MAAMC,KAAK,GAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEEC,EAAAA,MAAM,EAAE,mEAzBC;AA0BTC,EAAAA,IAAI,EAAE,MA1BG;AA2BTC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAE;AADV,GA3BA;AA+BTC,EAAAA,cAAc,EAAE,KA/BP;AAgCTC,EAAAA,YAAY,EAAE,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAEhC,QAAIC,IAAI,GAAG,IAAX;AACA,UAAMC,CAAC,GAAGF,QAAQ,CAAC,CAAD,CAAlB;AACA,QAAIG,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AACzB,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,MAApB;AAEA,UAAIC,QAAQ,GAAGnB,IAAI,CAACoB,IAAL,CAAUJ,IAAV,EAAgB;AAC3BK,QAAAA,IAAI,EAAEX,IAAI,GAAG,QAAH,GAAc;AADG,OAAhB,CAAf;AAGA,UAAIY,eAAe,GAAGH,QAAQ,CAACI,MAAT,CAAgBJ,QAAQ,CAACK,UAAT,CAAoB,CAApB,CAAhB,CAAtB;AACA,UAAIC,OAAO,GAAGzB,IAAI,CAAC0B,KAAL,CAAWC,aAAX,CAAyBL,eAAzB,EAA0C;AAACM,QAAAA,MAAM,EAAC;AAAR,OAA1C,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACH,KATD;;AAUA,QAAIf,IAAJ,EAAUE,MAAM,CAACmB,kBAAP,CAA0BpB,CAA1B,EAAV,KAA6CC,MAAM,CAACoB,iBAAP,CAAyBrB,CAAzB;AAC7C,WAAO,KAAP;AAGD;AAnDQ,CAAd;;AAsDC,MAAMsB,OAAN,SAAsBtC,KAAK,CAACuC,SAA5B,CAAsC;AACtCC,EAAAA,MAAM,GAAG;AACP,wBAEI,QAAC,MAAD,OAAYlC,KAAZ;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAQE;;AAVkC;;AAaxC,eAAegC,OAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Uppload.css';\r\nimport { Upload, message, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport XLSX from \"xlsx\";\r\n\r\n\r\n\r\n const props = {\r\n    // name: 'file',\r\n    //  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    // headers: {\r\n    //    authorization: 'authorization-text',\r\n    // },\r\n    // onChange(info) {\r\n    //   if (info.file.status !== 'uploading') {\r\n    //     console.log(info.file, info.fileList);\r\n    //   }\r\n    //   if (info.file.status === 'done') {\r\n    //     message.success(`${info.file.name} file uploaded successfully`);\r\n    //   } else if (info.file.status === 'error') {\r\n    //     message.error(`${info.file.name} file upload failed.`);\r\n    //   }\r\n    //   const reader = new FileReader();\r\n    // const rABS = !!reader.readAsBinaryString;\r\n    //        const workBook = XLSX.read(info.fileList[0],{ type: rABS ? \"binary\" : \"array\" });\r\n    //        const workSheetName = workBook.SheetNames[0];\r\n    //        const workSheet = workBook.Sheets[workSheetName];\r\n    //        const data = XLSX.utils.sheet_add_json(workSheet,{header: 1});\r\n    //        console.log(data);\r\n\r\n    // },\r\n    \r\n      accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n      name: 'file',\r\n      headers: {\r\n          authorization: 'authorization-text',\r\n      },\r\n     \r\n      showUploadList: false,\r\n      beforeUpload: (file, fileList) => {\r\n        \r\n        var rABS = true;\r\n        const f = fileList[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var data = e.target.result;\r\n          \r\n            var workbook = XLSX.read(data, {\r\n                type: rABS ? 'binary' : 'array'\r\n            });\r\n            var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n            var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, {header:1});\r\n            console.log(jsonArr);\r\n        };\r\n        if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n        return false;\r\n        \r\n\r\n      }\r\n\r\n  };\r\n  class Uppload extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n        <Upload {...props}>\r\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n      </Upload>\r\n   \r\n\r\n\r\n    )}\r\n\r\n}\r\nexport default Uppload;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';import _objectSpread from\"D:/WebReact/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/WebReact/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/WebReact/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:/WebReact/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:/WebReact/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/WebReact/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'antd/dist/antd.css';import'./Uppload.css';import{Upload,message,Button}from'antd';import{UploadOutlined}from'@ant-design/icons';import XLSX from\"xlsx\";// const props = {\n// accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n// name: 'file',\n// headers: {\n//   authorization: 'authorization-text',\n// },\n//   showUploadList: true,\n//   onChange(info) {\n//     if (info.file.status !== 'uploading') {\n//       console.log(info.file, info.fileList);\n//     }\n//     if (info.file.status === 'done') {\n//       message.success(`${info.file.name} file uploaded successfully`);\n//     } else if (info.file.status === 'error') {\n//       message.error(`${info.file.name} file upload failed.`);\n//     }\n//   },\n//   beforeUpload: (file, fileList) => {\n//     var rABS = true;\n//     const f = fileList[0];\n//     var reader = new FileReader();\n//     reader.onload = function (e) {\n//       var data = e.target.result;\n//       var workbook = XLSX.read(data, {\n//         type: rABS ? 'binary' : 'array'\n//       });\n//       var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\n//       var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\n//       let resultArray = [];\n//       console.log(jsonArr);\n//       console.log(jsonArr.length);\n//       console.log(jsonArr[0].length);\n//       for (let i = 1; i < jsonArr.length; i++) {\n//         var objArray = [];\n//         for (let j = 0; j < jsonArr[0].length; j++) {\n//           var obj = new Object;\n//           obj = { key: jsonArr[0][j], value: jsonArr[i][j] };\n//           objArray.push(obj);\n//         }\n//         resultArray.push(objArray);\n//       }\n//       console.log(resultArray);\n//       http.post(\"/prejson\", resultArray);\n//     };\n//     if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\n//     return false;\n//   }\n// };\nimport{jsx as _jsx}from\"react/jsx-runtime\";var UPLOAD_PROPS={accept:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',name:'file',headers:{authorization:'authorization-text'}};var Uppload=/*#__PURE__*/function(_React$PureComponent){_inherits(Uppload,_React$PureComponent);var _super=_createSuper(Uppload);function Uppload(props){var _this;_classCallCheck(this,Uppload);_this=_super.call(this,props);_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.beforeUpload=_this.beforeUpload.bind(_assertThisInitialized(_this));_this.fileInput=/*#__PURE__*/React.createRef();return _this;}_createClass(Uppload,[{key:\"handleChange\",value:function handleChange(info){if(info.file.status!=='uploading'){console.log(info.file,info.fileList,\"arsi\");}if(info.file.status==='done'){message.success(\"\".concat(info.file.name,\" file uploaded successfully\"));}else if(info.file.status==='error'){message.error(\"\".concat(info.file.name,\" file upload failed.\"));}}},{key:\"beforeUpload\",value:function beforeUpload(file,fileList){var rABS=true;var f=fileList[0];var reader=new FileReader();reader.onload=function(e){var _this$props$onUpload,_this$props;var data=e.target.result;var workbook=XLSX.read(data,{type:rABS?'binary':'array'});var first_worksheet=workbook.Sheets[workbook.SheetNames[0]];var jsonArr=XLSX.utils.sheet_to_json(first_worksheet,{header:1});var resultArray=[];console.log(jsonArr);console.log(jsonArr.length);console.log(jsonArr[0].length);for(var i=1;i<jsonArr.length;i++){var objArray=[];for(var j=0;j<jsonArr[0].length;j++){var obj=new Object();obj={key:jsonArr[0][j],value:jsonArr[i][j]};objArray.push(obj);}resultArray.push(objArray);}(_this$props$onUpload=(_this$props=this.props).onUpload)===null||_this$props$onUpload===void 0?void 0:_this$props$onUpload.call(_this$props,resultArray);// http.post(\"/prejson\", resultArray);\n}.bind(this);if(rABS)reader.readAsBinaryString(f);else reader.readAsArrayBuffer(f);return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Upload,_objectSpread(_objectSpread({},UPLOAD_PROPS),{},{onChange:this.handleChange,beforeUpload:this.beforeUpload,maxCount:1,children:/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(UploadOutlined,{}),children:\"Click to Upload\"})}));}}]);return Uppload;}(React.PureComponent);var SheetJSFT=[\"xlsx\",\"xlsm\",\"xls\",\"csv\"];export default Uppload;","map":{"version":3,"sources":["D:/WebReact/fundclient/src/components/Uppload/Uppload.js"],"names":["React","Upload","message","Button","UploadOutlined","XLSX","UPLOAD_PROPS","accept","name","headers","authorization","Uppload","props","handleChange","bind","beforeUpload","fileInput","createRef","info","file","status","console","log","fileList","success","error","rABS","f","reader","FileReader","onload","e","data","target","result","workbook","read","type","first_worksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","resultArray","length","i","objArray","j","obj","Object","key","value","push","onUpload","readAsBinaryString","readAsArrayBuffer","PureComponent","SheetJSFT"],"mappings":"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","sourcesContent":["'use strict';\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Uppload.css';\r\nimport { Upload, message, Button} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport XLSX from \"xlsx\";\r\n\r\n\r\n\r\n\r\n\r\n// const props = {\r\n  // accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  // name: 'file',\r\n  // headers: {\r\n  //   authorization: 'authorization-text',\r\n  // },\r\n\r\n//   showUploadList: true,\r\n//   onChange(info) {\r\n//     if (info.file.status !== 'uploading') {\r\n//       console.log(info.file, info.fileList);\r\n//     }\r\n//     if (info.file.status === 'done') {\r\n//       message.success(`${info.file.name} file uploaded successfully`);\r\n//     } else if (info.file.status === 'error') {\r\n//       message.error(`${info.file.name} file upload failed.`);\r\n//     }\r\n//   },\r\n//   beforeUpload: (file, fileList) => {\r\n\r\n//     var rABS = true;\r\n//     const f = fileList[0];\r\n//     var reader = new FileReader();\r\n//     reader.onload = function (e) {\r\n//       var data = e.target.result;\r\n\r\n//       var workbook = XLSX.read(data, {\r\n//         type: rABS ? 'binary' : 'array'\r\n//       });\r\n//       var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n//       var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\r\n\r\n//       let resultArray = [];\r\n//       console.log(jsonArr);\r\n//       console.log(jsonArr.length);\r\n//       console.log(jsonArr[0].length);\r\n//       for (let i = 1; i < jsonArr.length; i++) {\r\n//         var objArray = [];\r\n//         for (let j = 0; j < jsonArr[0].length; j++) {\r\n//           var obj = new Object;\r\n//           obj = { key: jsonArr[0][j], value: jsonArr[i][j] };\r\n//           objArray.push(obj);\r\n//         }\r\n//         resultArray.push(objArray);\r\n\r\n//       }\r\n//       console.log(resultArray);\r\n\r\n//       http.post(\"/prejson\", resultArray);\r\n\r\n//     };\r\n//     if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n//     return false;\r\n//   }\r\n\r\n// };\r\n\r\nconst UPLOAD_PROPS = {\r\n  accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  name: 'file',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Uppload extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.beforeUpload = this.beforeUpload.bind(this);\r\n    this.fileInput = React.createRef();     \r\n    \r\n  }\r\n\r\n\r\n  handleChange(info) {\r\n    \r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList,\"arsi\");\r\n     \r\n    }\r\n   \r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  \r\n    \r\n  \r\n  }\r\n  \r\n\r\n  beforeUpload(file, fileList) {\r\n    var rABS = true;\r\n    const f = fileList[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n   \r\n      var data = e.target.result;\r\n\r\n      var workbook = XLSX.read(data, {\r\n        type: rABS ? 'binary' : 'array'\r\n      });\r\n      var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\r\n     \r\n\r\n      let resultArray = [];\r\n      console.log(jsonArr);\r\n      console.log(jsonArr.length);\r\n      console.log(jsonArr[0].length);\r\n      for (let i = 1; i < jsonArr.length; i++) {\r\n        var objArray = [];\r\n        for (let j = 0; j < jsonArr[0].length; j++) {\r\n          var obj = new Object;\r\n          obj = { key: jsonArr[0][j], value: jsonArr[i][j] };\r\n          objArray.push(obj);\r\n        }\r\n        resultArray.push(objArray);\r\n\r\n      }\r\n\r\n      this.props.onUpload?.(resultArray);\r\n\r\n      // http.post(\"/prejson\", resultArray);\r\n\r\n    }.bind(this);\r\n    if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n    return false;\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n            \r\n    return (\r\n\r\n      <Upload\r\n        {...UPLOAD_PROPS}\r\n        onChange={this.handleChange}\r\n        beforeUpload={this.beforeUpload}\r\n        maxCount={1}\r\n       \r\n      \r\n        \r\n      >\r\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n     \r\n        {/* <input\r\n          type=\"file\"\r\n          hidden\r\n          accept={SheetJSFT}\r\n          ref={this.fileInput}\r\n          onChange={this.handleChange}\r\n\r\n        /> */}\r\n      </Upload>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst SheetJSFT = [\r\n  \"xlsx\",\r\n  \"xlsm\",\r\n  \"xls\",\r\n  \"csv\",\r\n\r\n]\r\nexport default Uppload;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebReact\\\\FundTest\\\\fundclient\\\\src\\\\components\\\\UpTable\\\\UpTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Popconfirm, Form, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst EditableContext = /*#__PURE__*/React.createContext(null);\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s2();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\n\nclass UpTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: 'Fund',\n      dataIndex: 'name',\n      width: '30%',\n      render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-input-group-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"Abc\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"Abc\",\n            children: \"Abc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"123\",\n            children: \"123\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"%\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: 'Document type',\n      dataIndex: 'DocumentType',\n      render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-input-group-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"CapitalCall\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"CapitalCall\",\n            children: \"Capital Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"CapitalAccount\",\n            children: \"Capital Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"CatchUpCall\",\n            children: \"Catch-Up Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"K1\",\n            children: \"K-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: 'Periodic or Numeric Document?',\n      dataIndex: 'PeriodicorNumeric',\n      render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-input-group-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          value: \"lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: 'Document Number',\n      dataIndex: 'DocumentNumber',\n      render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-input-group-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"Periodic\",\n            children: \"Periodic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Numeric\",\n            children: \"Numeric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: 'Name the ',\n      dataIndex: 'DocumentName',\n      editable: true\n    }];\n    this.state = {\n      dataSource: [{}],\n      count: 1\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        components: components,\n        rowClassName: () => 'editable-row',\n        bordered: true,\n        dataSource: dataSource,\n        columns: columns,\n        pagination: {\n          defaultPageSize: 10,\n          hideOnSinglePage: true\n        },\n        style: {\n          margin: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UpTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");","map":{"version":3,"sources":["D:/WebReact/FundTest/fundclient/src/components/UpTable/UpTable.js"],"names":["React","useContext","useState","useEffect","useRef","Table","Input","Button","Popconfirm","Form","Select","Option","EditableContext","createContext","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","UpTable","Component","constructor","row","newData","state","dataSource","findIndex","item","key","splice","setState","columns","width","render","count","components","body","cell","map","col","onCell","defaultPageSize","hideOnSinglePage"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport  {  Table, Input, Button, Popconfirm, Form, Select  } from  'antd';\r\nconst { Option } = Select;\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log('Save failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass UpTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'Fund',\r\n        dataIndex: 'name',\r\n        width: '30%',\r\n        render: () =>\r\n        <div className=\"site-input-group-wrapper\">\r\n            <Select defaultValue=\"Abc\">\r\n                <Option value=\"Abc\">Abc</Option>\r\n                <Option value=\"123\">123</Option>\r\n                <Option value=\"%\">%</Option>\r\n\r\n            </Select>\r\n        </div>\r\n      },\r\n      {\r\n        title: 'Document type',\r\n        dataIndex: 'DocumentType',\r\n        render: () =>\r\n        <div className=\"site-input-group-wrapper\">\r\n            <Select defaultValue=\"CapitalCall\">\r\n                <Option value=\"CapitalCall\">Capital Call</Option>\r\n                <Option value=\"CapitalAccount\">Capital Account</Option>\r\n                <Option value=\"CatchUpCall\">Catch-Up Call</Option>\r\n                <Option value=\"K1\">K-1</Option>\r\n\r\n            </Select>\r\n        </div>\r\n      },\r\n      {\r\n        title: 'Periodic or Numeric Document?',\r\n        dataIndex: 'PeriodicorNumeric',\r\n        render: () =>\r\n        <div className=\"site-input-group-wrapper\">\r\n\r\n            <text value =\"lol\"></text>\r\n            {/* <Select defaultValue=\"Periodic\">\r\n                <Option value=\"Periodic\">Periodic</Option>\r\n                <Option value=\"Numeric\">Numeric</Option>\r\n                \r\n            </Select> */}\r\n        </div>\r\n      },\r\n      {\r\n        title: 'Document Number',\r\n        dataIndex: 'DocumentNumber',\r\n        render: () =>\r\n        <div className=\"site-input-group-wrapper\">\r\n            <Select defaultValue=\"1\">\r\n                <Option value=\"Periodic\">Periodic</Option>\r\n                <Option value=\"Numeric\">Numeric</Option>\r\n                \r\n            </Select>\r\n        </div>\r\n      },\r\n      {\r\n        title: 'Name the ',\r\n        dataIndex: 'DocumentName',\r\n        editable: true,\r\n      },\r\n     \r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n         \r\n        },\r\n        \r\n      ],\r\n      count: 1,\r\n    };\r\n  }\r\n\r\n\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={{ defaultPageSize: 10, hideOnSinglePage: true }}\r\n          style={{\r\n            margin: 20,\r\n        }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UpTable;"]},"metadata":{},"sourceType":"module"}
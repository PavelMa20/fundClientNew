{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebReact\\\\FundTest\\\\fundclient\\\\src\\\\components\\\\DocTable\\\\DocTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DocTable = ({\n  onGet\n}) => {\n  let docArray = onGet;\n  let columnArray = [];\n  let headerArray = [];\n  let dataArray = [];\n  let columns = [];\n  console.log(docArray);\n  headerArray = docArray[0];\n  console.log(headerArray);\n\n  for (var key in headerArray) {\n    let s = headerArray[key];\n    columnArray.push(Object.values(s)[0]);\n  }\n\n  console.log(columnArray);\n\n  for (var key in docArray) {\n    dataArray.push(docArray[key]);\n  }\n\n  console.log(dataArray);\n\n  for (let i = 0; i < columnArray.length; i++) {\n    columns.push({\n      title: columnArray[i],\n      dataIndex: columnArray[i].toLowerCase,\n      width: 150\n    });\n  } //    let columns = [\n  //         {\n  //           title: 'Name',\n  //           dataIndex: 'name',\n  //           width: 150,\n  //         },\n  //         {\n  //           title: 'Age',\n  //           dataIndex: 'age',\n  //           width: 150,\n  //         },\n  //         {\n  //           title: 'Address',\n  //           dataIndex: 'address',\n  //         },\n  //       ];\n\n\n  const data = [];\n\n  for (let i = 0; i < 100; i++) {\n    data.push({\n      key: i,\n      name: `Edward King ${i}`,\n      age: 32,\n      address: `London, Park Lane no. ${i}`\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: {\n      pageSize: 50\n    },\n    scroll: {\n      y: 240\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DocTable;\nexport default DocTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocTable\");","map":{"version":3,"sources":["D:/WebReact/FundTest/fundclient/src/components/DocTable/DocTable.js"],"names":["React","Table","DocTable","onGet","docArray","columnArray","headerArray","dataArray","columns","console","log","key","s","push","Object","values","i","length","title","dataIndex","toLowerCase","width","data","name","age","address","pageSize","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,QAAsB,MAAtB;;;AAEA,MAAMC,QAAQ,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAExB,MAAIC,QAAQ,GAAGD,KAAf;AACA,MAAIE,WAAW,GAAG,EAAlB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAE,EAAAA,WAAW,GAAGF,QAAQ,CAAC,CAAD,CAAtB;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;;AACH,OAAI,IAAIK,GAAR,IAAeL,WAAf,EAA2B;AACvB,QAAIM,CAAC,GAAGN,WAAW,CAACK,GAAD,CAAnB;AAEAN,IAAAA,WAAW,CAACQ,IAAZ,CAAiBC,MAAM,CAACC,MAAP,CAAcH,CAAd,EAAiB,CAAjB,CAAjB;AACH;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AAEA,OAAI,IAAIM,GAAR,IAAeP,QAAf,EAAwB;AACpBG,IAAAA,SAAS,CAACM,IAAV,CAAeT,QAAQ,CAACO,GAAD,CAAvB;AACH;;AACDF,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACE,OAAI,IAAIS,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACX,WAAW,CAACY,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AAErCR,IAAAA,OAAO,CAACK,IAAR,CACI;AACIK,MAAAA,KAAK,EAAEb,WAAW,CAACW,CAAD,CADtB;AAEIG,MAAAA,SAAS,EAAEd,WAAW,CAACW,CAAD,CAAX,CAAeI,WAF9B;AAGIC,MAAAA,KAAK,EAAE;AAHX,KADJ;AAOD,GA9BwB,CA+B3B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGM,QAAMC,IAAI,GAAG,EAAb;;AACN,OAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BM,IAAAA,IAAI,CAACT,IAAL,CAAU;AACRF,MAAAA,GAAG,EAAEK,CADG;AAERO,MAAAA,IAAI,EAAG,eAAcP,CAAE,EAFf;AAGRQ,MAAAA,GAAG,EAAE,EAHG;AAIRC,MAAAA,OAAO,EAAG,yBAAwBT,CAAE;AAJ5B,KAAV;AAMD;;AAEG,sBAEI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAER,OAAhB;AAAyB,IAAA,UAAU,EAAEc,IAArC;AAA2C,IAAA,UAAU,EAAE;AAAEI,MAAAA,QAAQ,EAAE;AAAZ,KAAvD;AAAyE,IAAA,MAAM,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL;AAAjF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CApED;;KAAMzB,Q;AAqEN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\n\r\nconst DocTable =({onGet})=>{\r\n        \r\n   let docArray = onGet;\r\n   let columnArray = [];\r\n   let headerArray = [];\r\n   let dataArray = [];\r\n   let columns = [];\r\n    console.log(docArray);\r\n    headerArray = docArray[0];\r\n   console.log(headerArray);\r\nfor(var key in headerArray){\r\n    let s = headerArray[key];\r\n   \r\n    columnArray.push(Object.values(s)[0]);\r\n}\r\nconsole.log(columnArray);\r\n\r\nfor(var key in docArray){\r\n    dataArray.push(docArray[key]);\r\n}\r\nconsole.log(dataArray);\r\n  for(let i = 0;i<columnArray.length;i++){\r\n\r\n    columns.push(\r\n        {\r\n            title: columnArray[i],\r\n            dataIndex: columnArray[i].toLowerCase,\r\n            width: 150, \r\n        }\r\n    )\r\n  }\r\n//    let columns = [\r\n\r\n       \r\n//         {\r\n//           title: 'Name',\r\n//           dataIndex: 'name',\r\n//           width: 150,\r\n//         },\r\n//         {\r\n//           title: 'Age',\r\n//           dataIndex: 'age',\r\n//           width: 150,\r\n//         },\r\n//         {\r\n//           title: 'Address',\r\n//           dataIndex: 'address',\r\n//         },\r\n//       ];\r\n\r\n\r\n      const data = [];\r\nfor (let i = 0; i < 100; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`,\r\n  });\r\n}\r\n\r\n    return (\r\n\r\n        <Table columns={columns} dataSource={data} pagination={{ pageSize: 50 }} scroll={{ y: 240 }} />\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default DocTable;"]},"metadata":{},"sourceType":"module"}
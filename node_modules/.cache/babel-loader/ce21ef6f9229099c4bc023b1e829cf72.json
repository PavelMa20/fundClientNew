{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebReact\\\\FundTest\\\\fundclient\\\\src\\\\components\\\\RenderCell.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderCell = preffixAndPostfix => {\n  let dataCell = preffixAndPostfix;\n  console.log(dataCell);\n  console.log(Object.keys(dataCell));\n  console.log(Object.values(dataCell)[0][0]);\n  console.log(Object.entries(dataCell)[0].preffix);\n  let preffix = dataCell.preffix;\n  let postfix = dataCell.postfix;\n  console.log(preffix);\n  console.log(postfix);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RenderCell;\nexport default RenderCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderCell\");","map":{"version":3,"sources":["D:/WebReact/FundTest/fundclient/src/components/RenderCell.js"],"names":["React","RenderCell","preffixAndPostfix","dataCell","console","log","Object","keys","values","entries","preffix","postfix"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,UAAU,GAAEC,iBAAD,IAAqB;AAClC,MAAIC,QAAQ,GAAGD,iBAAf;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACE,MAAP,CAAcL,QAAd,EAAwB,CAAxB,EAA2B,CAA3B,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACG,OAAP,CAAeN,QAAf,EAAyB,CAAzB,EAA4BO,OAAxC;AACA,MAAIA,OAAO,GAAGP,QAAQ,CAACO,OAAvB;AACA,MAAIC,OAAO,GAAGR,QAAQ,CAACQ,OAAvB;AAEJP,EAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGC,CAjBD;;KAAMV,U;AAkBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst RenderCell=(preffixAndPostfix)=>{\r\n    let dataCell = preffixAndPostfix;\r\n    console.log(dataCell);\r\n    console.log(Object.keys(dataCell));\r\n    console.log(Object.values(dataCell)[0][0]);\r\n    console.log(Object.entries(dataCell)[0].preffix);\r\n    let preffix = dataCell.preffix;\r\n    let postfix = dataCell.postfix;\r\n    \r\nconsole.log(preffix);\r\nconsole.log(postfix);\r\n\r\n\r\n\r\nreturn(\r\n    <div> </div>\r\n)\r\n}\r\nexport default RenderCell;"]},"metadata":{},"sourceType":"module"}
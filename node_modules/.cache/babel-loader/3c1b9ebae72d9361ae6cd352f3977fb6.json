{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebReact\\\\FundTest\\\\fundclient\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      errors: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const user = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirm: this.state.password_confirm\n    };\n    this.props.registerUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: '50px',\n        width: '700px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '40px'\n        },\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            className: classnames('form-control form-control-lg', {\n              'is-invalid': errors.name\n            }),\n            name: \"name\",\n            onChange: this.handleInputChange,\n            value: this.state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: classnames('form-control form-control-lg', {\n              'is-invalid': errors.email\n            }),\n            name: \"email\",\n            onChange: this.handleInputChange,\n            value: this.state.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: classnames('form-control form-control-lg', {\n              'is-invalid': errors.password\n            }),\n            name: \"password\",\n            onChange: this.handleInputChange,\n            value: this.state.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            className: classnames('form-control form-control-lg', {\n              'is-invalid': errors.password_confirm\n            }),\n            name: \"password_confirm\",\n            onChange: this.handleInputChange,\n            value: this.state.password_confirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), errors.password_confirm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.password_confirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Register User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["D:/WebReact/FundTest/fundclient/src/components/Register.js"],"names":["React","Component","connect","PropTypes","withRouter","registerUser","classnames","Register","constructor","state","name","email","password","password_confirm","errors","handleInputChange","bind","handleSubmit","e","setState","target","value","preventDefault","user","props","history","componentWillReceiveProps","nextProps","auth","isAuthenticated","push","componentDidMount","render","marginTop","width","marginBottom","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { registerUser } from '../actions/authentication';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirm: '',\r\n            errors: {}\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password_confirm: this.state.password_confirm\r\n        }\r\n        this.props.registerUser(user, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.auth.isAuthenticated) {\r\n            this.props.history.push('/')\r\n        }\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return(\r\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\r\n            <h2 style={{marginBottom: '40px'}}>Registration</h2>\r\n            <form onSubmit={ this.handleSubmit }>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.name\r\n                    })}\r\n                    name=\"name\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.name }\r\n                    />\r\n                    {errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.email\r\n                    })}\r\n                    name=\"email\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.email }\r\n                    />\r\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.password\r\n                    })}\r\n                    name=\"password\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password }\r\n                    />\r\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.password_confirm\r\n                    })}\r\n                    name=\"password_confirm\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password_confirm }\r\n                    />\r\n                    {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Register User\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))"]},"metadata":{},"sourceType":"module"}
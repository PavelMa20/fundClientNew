{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebReact\\\\fundclient\\\\src\\\\PdfButton.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; //import { Document, Page } from 'react-pdf';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PdfButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.viewHandler = async () => {\n      axios(`http://localhost:3000/create-pdf`, {\n        method: \"GET\",\n        responseType: \"blob\" //Force to receive data in a Blob Format\n\n      }).then(response => {\n        //Create a Blob from the PDF Stream\n        const file = new Blob([response.data], {\n          type: \"application/pdf\"\n        }); //Build a URL from the file\n\n        const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n        window.open(fileURL);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.viewHandler,\n        children: \" View Pdf \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/WebReact/fundclient/src/PdfButton.js"],"names":["React","Component","axios","PdfButton","viewHandler","method","responseType","then","response","file","Blob","data","type","fileURL","URL","createObjectURL","window","open","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAiC;AAAA;AAAA;;AAAA,SAI5CG,WAJ4C,GAI9B,YAAY;AACtBF,MAAAA,KAAK,CAAE,kCAAF,EAAqC;AACxCG,QAAAA,MAAM,EAAE,KADgC;AAExCC,QAAAA,YAAY,EAAE,MAF0B,CAGxC;;AAHwC,OAArC,CAAL,CAKGC,IALH,CAKQC,QAAQ,IAAI;AAChB;AACA,cAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,QAAQ,CAACG,IAAV,CAAT,EAA0B;AACrCC,UAAAA,IAAI,EAAE;AAD+B,SAA1B,CAAb,CAFgB,CAKhB;;AACA,cAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAhB,CANgB,CAOhB;;AACAO,QAAAA,MAAM,CAACC,IAAP,CAAYJ,OAAZ;AACD,OAdH,EAeGK,KAfH,CAeSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAjBH;AAkBD,KAvByC;AAAA;;AA0BhDG,EAAAA,MAAM,GAAE;AACJ,wBACK;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKlB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAC2D,GAD3D;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAUH;;AArC+C","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n//import { Document, Page } from 'react-pdf';\r\n\r\nexport default class PdfButton extends Component{\r\n\r\n   \r\n\r\n    viewHandler = async () => {\r\n        axios(`http://localhost:3000/create-pdf`, {\r\n          method: \"GET\",\r\n          responseType: \"blob\"\r\n          //Force to receive data in a Blob Format\r\n        })\r\n          .then(response => {\r\n            //Create a Blob from the PDF Stream\r\n            const file = new Blob([response.data], {\r\n              type: \"application/pdf\"\r\n            });\r\n            //Build a URL from the file\r\n            const fileURL = URL.createObjectURL(file);\r\n            //Open the URL on new Window\r\n            window.open(fileURL);\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      };\r\n\r\n\r\nrender(){\r\n    return (\r\n         <div>\r\n             <button onClick={this.viewHandler}> View Pdf </button>{\" \"}\r\n{/* <div className=\"pdf-preview\">\r\n<Document file= {this.goPdf} onLoadSuccess={this.onDocumentLoadSuccess}>\r\n    <Page pageNumber={1}></Page>\r\n   </Document>\r\n</div> */}\r\n         </div>\r\n    );  \r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
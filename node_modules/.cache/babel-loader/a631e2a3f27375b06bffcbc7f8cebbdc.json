{"ast":null,"code":"import axios from'axios';import{GET_ERRORS,SET_CURRENT_USER}from'./types';import setAuthToken from'../setAuthToken';import jwt_decode from'jwt-decode';export var registerUser=function registerUser(user,history){return function(dispatch){axios.post('/api/users/register',user).then(function(res){return history.push('/login');}).catch(function(err){dispatch({type:GET_ERRORS,payload:err.response.data});});};};export var loginUser=function loginUser(user){return function(dispatch){axios.post('/api/users/login',user).then(function(res){var token=res.data.token;localStorage.setItem('jwtToken',token);setAuthToken(token);var decoded=jwt_decode(token);dispatch(setCurrentUser(decoded));}).catch(function(err){dispatch({type:GET_ERRORS,payload:err.response.data});});};};export var setCurrentUser=function setCurrentUser(decoded){return{type:SET_CURRENT_USER,payload:decoded};};export var logoutUser=function logoutUser(history){return function(dispatch){localStorage.removeItem('jwtToken');setAuthToken(false);dispatch(setCurrentUser({}));history.push('/login');};};","map":{"version":3,"sources":["D:/WebReact/fundclient/src/actions/authentication.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setAuthToken","jwt_decode","registerUser","user","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,SAA7C,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAOC,OAAP,QAAmB,UAAAC,QAAQ,CAAI,CACvDR,KAAK,CAACS,IAAN,CAAW,qBAAX,CAAkCH,IAAlC,EACSI,IADT,CACc,SAAAC,GAAG,QAAIJ,CAAAA,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ,EADjB,EAESC,KAFT,CAEe,SAAAC,GAAG,CAAI,CACVN,QAAQ,CAAC,CACLO,IAAI,CAAEd,UADD,CAELe,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFjB,CAAD,CAAR,CAIH,CAPT,EAQH,CAT2B,EAArB,CAWP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACb,IAAD,QAAU,UAAAE,QAAQ,CAAI,CAC3CR,KAAK,CAACS,IAAN,CAAW,kBAAX,CAA+BH,IAA/B,EACSI,IADT,CACc,SAAAC,GAAG,CAAI,IACDS,CAAAA,KADC,CACST,GAAG,CAACO,IADb,CACDE,KADC,CAETC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCF,KAAjC,EACAjB,YAAY,CAACiB,KAAD,CAAZ,CACA,GAAMG,CAAAA,OAAO,CAAGnB,UAAU,CAACgB,KAAD,CAA1B,CACAZ,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR,CACH,CAPT,EAQSV,KART,CAQe,SAAAC,GAAG,CAAI,CACVN,QAAQ,CAAC,CACLO,IAAI,CAAEd,UADD,CAELe,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFjB,CAAD,CAAR,CAIH,CAbT,EAcH,CAfwB,EAAlB,CAiBP,MAAO,IAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAD,OAAO,CAAI,CACrC,MAAO,CACHR,IAAI,CAAEb,gBADH,CAEHc,OAAO,CAAEO,OAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAClB,OAAD,QAAa,UAAAC,QAAQ,CAAI,CAC/Ca,YAAY,CAACK,UAAb,CAAwB,UAAxB,EACAvB,YAAY,CAAC,KAAD,CAAZ,CACAK,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR,CACAjB,OAAO,CAACK,IAAR,CAAa,QAAb,EACH,CALyB,EAAnB","sourcesContent":["import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport setAuthToken from '../setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const registerUser = (user, history) => dispatch => {\r\n    axios.post('/api/users/register', user)\r\n            .then(res => history.push('/login'))\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n}\r\n\r\nexport const loginUser = (user) => dispatch => {\r\n    axios.post('/api/users/login', user)\r\n            .then(res => {\r\n                const { token } = res.data;\r\n                localStorage.setItem('jwtToken', token);\r\n                setAuthToken(token);\r\n                const decoded = jwt_decode(token);\r\n                dispatch(setCurrentUser(decoded));\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n}\r\n\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n}\r\n\r\nexport const logoutUser = (history) => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n    history.push('/login');\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebReact\\\\FundTest\\\\fundclient\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:3000/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const Demo = () => {\n    const onFinish = values => {\n      console.log('Success:', values);\n    };\n\n    const onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        name: \"remember\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  };\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/WebReact/FundTest/fundclient/src/components/Login/Login.js"],"names":["React","PropTypes","Form","Input","Button","Checkbox","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","useState","password","setPassword","handleSubmit","e","preventDefault","token","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","onFinish","values","console","log","onFinishFailed","errorInfo","remember","required","message","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\n\r\nasync function loginUser(credentials) {\r\n    return fetch('http://localhost:3000/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n      .then(data => data.json())\r\n   }\r\n\r\nexport default function Login({ setToken }) {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n   \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n          username,\r\n          password\r\n        });\r\n        setToken(token);\r\n      }\r\n \r\n    const layout = {\r\n      labelCol: {\r\n        span: 8,\r\n      },\r\n      wrapperCol: {\r\n        span: 16,\r\n      },\r\n    };\r\n    const tailLayout = {\r\n      wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n      },\r\n    };\r\n    \r\n    const Demo = () => {\r\n      const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n      };\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n    \r\n      return (\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input onChange={e => setUserName(e.target.value)}/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password onChange={e => setPassword(e.target.value)}/>\r\n          </Form.Item>\r\n    \r\n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n    \r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    };\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n  }"]},"metadata":{},"sourceType":"module"}
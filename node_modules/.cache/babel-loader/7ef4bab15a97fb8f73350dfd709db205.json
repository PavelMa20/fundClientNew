{"ast":null,"code":"import _objectSpread from\"D:/WebReact/FundTest/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/WebReact/FundTest/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/WebReact/FundTest/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:/WebReact/FundTest/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:/WebReact/FundTest/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/WebReact/FundTest/fundclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'antd/dist/antd.css';import'./Uppload.css';import{Upload,message,Button}from'antd';import{UploadOutlined}from'@ant-design/icons';import XLSX from\"xlsx\";import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var props={// name: 'file',\n//  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n// headers: {\n//    authorization: 'authorization-text',\n// },\n// onChange(info) {\n//   if (info.file.status !== 'uploading') {\n//     console.log(info.file, info.fileList);\n//   }\n//   if (info.file.status === 'done') {\n//     message.success(`${info.file.name} file uploaded successfully`);\n//   } else if (info.file.status === 'error') {\n//     message.error(`${info.file.name} file upload failed.`);\n//   }\n//   const reader = new FileReader();\n// const rABS = !!reader.readAsBinaryString;\n//        const workBook = XLSX.read(info.fileList[0],{ type: rABS ? \"binary\" : \"array\" });\n//        const workSheetName = workBook.SheetNames[0];\n//        const workSheet = workBook.Sheets[workSheetName];\n//        const data = XLSX.utils.sheet_add_json(workSheet,{header: 1});\n//        console.log(data);\n// },\naccept:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',name:'file',headers:{authorization:'authorization-text'},showUploadList:true,onChange:function onChange(info){if(info.file.status!=='uploading'){console.log(info.file,info.fileList);}if(info.file.status==='done'){message.success(\"\".concat(info.file.name,\" file uploaded successfully\"));}else if(info.file.status==='error'){message.error(\"\".concat(info.file.name,\" file upload failed.\"));}},beforeUpload:function beforeUpload(file,fileList){var rABS=true;var f=fileList[0];var reader=new FileReader();reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:rABS?'binary':'array'});var first_worksheet=workbook.Sheets[workbook.SheetNames[0]];var jsonArr=XLSX.utils.sheet_to_json(first_worksheet,{header:1});var resultArray=[];console.log(jsonArr);console.log(jsonArr.length);console.log(jsonArr[0].length);for(var i=1;i<jsonArr.length;i++){var objArray=[];for(var j=0;j<jsonArr[0].length;j++){var obj=new Object();obj={key:jsonArr[0][j],value:jsonArr[i][j]};objArray.push(obj);}resultArray.push(objArray);}console.log(resultArray);axios.post(\"http://localhost:3000/api\",{resultArray:resultArray}).then(function(res){// console.log(res);\n// console.log(res.data);\n});};if(rABS)reader.readAsBinaryString(f);else reader.readAsArrayBuffer(f);return false;}};var Uppload=/*#__PURE__*/function(_React$Component){_inherits(Uppload,_React$Component);var _super=_createSuper(Uppload);function Uppload(props){var _this;_classCallCheck(this,Uppload);_this=_super.call(this,props);_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.fileInput=/*#__PURE__*/React.createRef();return _this;}_createClass(Uppload,[{key:\"handleChange\",value:function handleChange(e){var files=e.target.files;if(files&&files[0])this.props.handleFile(files[0]);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(Upload,_objectSpread(_objectSpread({},props),{},{children:[/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(UploadOutlined,{}),children:\"Click to Upload\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",hidden:true,accept:SheetJSFT,ref:this.fileInput,onChange:this.handleChange})]}));}}]);return Uppload;}(React.Component);var SheetJSFT=[\"xlsx\",\"xlsm\",\"xls\",\"csv\"];export default Uppload;","map":{"version":3,"sources":["D:/WebReact/FundTest/fundclient/src/components/Uppload/Uppload.js"],"names":["React","Upload","message","Button","UploadOutlined","XLSX","axios","props","accept","name","headers","authorization","showUploadList","onChange","info","file","status","console","log","fileList","success","error","beforeUpload","rABS","f","reader","FileReader","onload","e","data","target","result","workbook","read","type","first_worksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","resultArray","length","i","objArray","j","obj","Object","key","value","push","post","then","res","readAsBinaryString","readAsArrayBuffer","Uppload","handleChange","bind","fileInput","createRef","files","handleFile","SheetJSFT","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Uppload.css';\r\nimport { Upload, message, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport XLSX from \"xlsx\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n const props = {\r\n    // name: 'file',\r\n    //  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    // headers: {\r\n    //    authorization: 'authorization-text',\r\n    // },\r\n    // onChange(info) {\r\n    //   if (info.file.status !== 'uploading') {\r\n    //     console.log(info.file, info.fileList);\r\n    //   }\r\n    //   if (info.file.status === 'done') {\r\n    //     message.success(`${info.file.name} file uploaded successfully`);\r\n    //   } else if (info.file.status === 'error') {\r\n    //     message.error(`${info.file.name} file upload failed.`);\r\n    //   }\r\n    //   const reader = new FileReader();\r\n    // const rABS = !!reader.readAsBinaryString;\r\n    //        const workBook = XLSX.read(info.fileList[0],{ type: rABS ? \"binary\" : \"array\" });\r\n    //        const workSheetName = workBook.SheetNames[0];\r\n    //        const workSheet = workBook.Sheets[workSheetName];\r\n    //        const data = XLSX.utils.sheet_add_json(workSheet,{header: 1});\r\n    //        console.log(data);\r\n\r\n    // },\r\n\r\n    \r\n      accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n      name: 'file',\r\n      headers: {\r\n          authorization: 'authorization-text',\r\n      },\r\n      showUploadList: true,\r\n      onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n          console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n      beforeUpload: (file, fileList) => {\r\n        \r\n        var rABS = true;\r\n        const f = fileList[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var data = e.target.result;\r\n          \r\n            var workbook = XLSX.read(data, {\r\n                type: rABS ? 'binary' : 'array'\r\n            });\r\n            var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n            var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, {header:1});\r\n          var resultArray = [];\r\n          \r\n            console.log(jsonArr);\r\n            console.log(jsonArr.length);\r\n            console.log(jsonArr[0].length);\r\n            for(let i=1;i<jsonArr.length;i++){\r\n            var  objArray = [];\r\n              for(let j=0;j<jsonArr[0].length;j++){\r\n                var obj = new Object;\r\n                      obj = {key:jsonArr[0][j] , value:jsonArr[i][j]};\r\n                      objArray.push(obj); \r\n              }\r\n              resultArray.push(objArray);  \r\n            }\r\n            console.log(resultArray);\r\n\r\n            axios.post(`http://localhost:3000/api`, { resultArray })\r\n            .then(res => {\r\n              // console.log(res);\r\n              // console.log(res.data);\r\n            })\r\n        \r\n        };\r\n        if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n        return false;\r\n      }\r\n  \r\n\r\n  };\r\n  class Uppload extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.fileInput = React.createRef();\r\n    }\r\n    handleChange(e) {\r\n      const files = e.target.files;\r\n      if (files && files[0]) this.props.handleFile(files[0]);\r\n    }\r\n  render() {\r\n    return (\r\n\r\n        <Upload {...props}>\r\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n        <input\r\n          type=\"file\"\r\n          hidden\r\n          accept={SheetJSFT}\r\n          ref={this.fileInput}\r\n          onChange={this.handleChange}\r\n         \r\n        />\r\n      </Upload>\r\n    )}\r\n\r\n}\r\n\r\nconst SheetJSFT = [\r\n  \"xlsx\",\r\n  \"xlsm\",\r\n  \"xls\",\r\n  \"csv\",\r\n  \r\n]\r\nexport default Uppload;"]},"metadata":{},"sourceType":"module"}
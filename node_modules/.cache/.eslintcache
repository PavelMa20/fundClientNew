[{"D:\\WebReact\\fundclient\\src\\index.js":"1","D:\\WebReact\\fundclient\\src\\reportWebVitals.js":"2","D:\\WebReact\\fundclient\\src\\App.js":"3","D:\\WebReact\\fundclient\\src\\components\\Navbar.js":"4","D:\\WebReact\\fundclient\\src\\setAuthToken.js":"5","D:\\WebReact\\fundclient\\src\\store.js":"6","D:\\WebReact\\fundclient\\src\\components\\Register.js":"7","D:\\WebReact\\fundclient\\src\\actions\\authentication.js":"8","D:\\WebReact\\fundclient\\src\\components\\Login.js":"9","D:\\WebReact\\fundclient\\src\\components\\Home.js":"10","D:\\WebReact\\fundclient\\src\\actions\\types.js":"11","D:\\WebReact\\fundclient\\src\\components\\Layout\\Layout.js":"12","D:\\WebReact\\fundclient\\src\\reducers\\index.js":"13","D:\\WebReact\\fundclient\\src\\components\\http-common.js":"14","D:\\WebReact\\fundclient\\src\\components\\MainInput\\MainInput.js":"15","D:\\WebReact\\fundclient\\src\\components\\Sider\\Sider.js":"16","D:\\WebReact\\fundclient\\src\\components\\Download\\Download.js":"17","D:\\WebReact\\fundclient\\src\\components\\Table\\TableDataColums.js":"18","D:\\WebReact\\fundclient\\src\\components\\UpTable\\UpTable.js":"19","D:\\WebReact\\fundclient\\src\\components\\IdInput\\IdInput.js":"20","D:\\WebReact\\fundclient\\src\\components\\NamingTable\\NamingTable.js":"21","D:\\WebReact\\fundclient\\src\\components\\Uppload\\Uppload.js":"22","D:\\WebReact\\fundclient\\src\\components\\DocTable\\DocTable.js":"23","D:\\WebReact\\fundclient\\src\\components\\ColumnInput\\ColumnInput.js":"24","D:\\WebReact\\fundclient\\src\\reducers\\authReducer.js":"25","D:\\WebReact\\fundclient\\src\\reducers\\errorReducer.js":"26","D:\\WebReact\\fundclient\\src\\components\\RenderCell.js":"27","D:\\WebReact\\fundclient\\src\\validation\\is-empty.js":"28"},{"size":546,"mtime":1617021748007,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1616426361932,"results":"31","hashOfConfig":"30"},{"size":1431,"mtime":1620057849133,"results":"32","hashOfConfig":"30"},{"size":1950,"mtime":1620057949587,"results":"33","hashOfConfig":"30"},{"size":268,"mtime":1619615353911,"results":"34","hashOfConfig":"30"},{"size":407,"mtime":1619619902255,"results":"35","hashOfConfig":"30"},{"size":4778,"mtime":1619615739787,"results":"36","hashOfConfig":"30"},{"size":1398,"mtime":1619615625120,"results":"37","hashOfConfig":"30"},{"size":3341,"mtime":1620057801525,"results":"38","hashOfConfig":"30"},{"size":251,"mtime":1619614251788,"results":"39","hashOfConfig":"30"},{"size":92,"mtime":1619614721992,"results":"40","hashOfConfig":"30"},{"size":5494,"mtime":1620232668978,"results":"41","hashOfConfig":"30"},{"size":217,"mtime":1619615514383,"results":"42","hashOfConfig":"30"},{"size":164,"mtime":1618237112489,"results":"43","hashOfConfig":"30"},{"size":422,"mtime":1617803908885,"results":"44","hashOfConfig":"30"},{"size":2255,"mtime":1619109607397,"results":"45","hashOfConfig":"30"},{"size":458,"mtime":1618338544405,"results":"46","hashOfConfig":"30"},{"size":6502,"mtime":1617708959428,"results":"47","hashOfConfig":"30"},{"size":9999,"mtime":1617814719346,"results":"48","hashOfConfig":"30"},{"size":413,"mtime":1618336471392,"results":"49","hashOfConfig":"30"},{"size":6689,"mtime":1620221884536,"results":"50","hashOfConfig":"30"},{"size":4622,"mtime":1620145416534,"results":"51","hashOfConfig":"30"},{"size":2372,"mtime":1620133062389,"results":"52","hashOfConfig":"30"},{"size":843,"mtime":1620219189197,"results":"53","hashOfConfig":"30"},{"size":510,"mtime":1619619440124,"results":"54","hashOfConfig":"30"},{"size":279,"mtime":1619614878435,"results":"55","hashOfConfig":"30"},{"size":593,"mtime":1620295336893,"results":"56","hashOfConfig":"30"},{"size":278,"mtime":1619619385738,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ygmf9x",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WebReact\\fundclient\\src\\index.js",[],"D:\\WebReact\\fundclient\\src\\reportWebVitals.js",[],"D:\\WebReact\\fundclient\\src\\App.js",[],"D:\\WebReact\\fundclient\\src\\components\\Navbar.js",["126"],"\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../actions/authentication';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n    onLogout(e) {\r\n        e.preventDefault();\r\n        this.props.logoutUser(this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated, user} = this.props.auth;\r\n        const authLinks = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <a href=\"#\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>\r\n                    <img src={user.avatar} alt={user.name} title={user.name}\r\n                        className=\"rounded-circle\"\r\n                        style={{ width: '25px', marginRight: '5px'}} />\r\n                            Logout\r\n                </a>\r\n            </ul>\r\n        )\r\n      const guestLinks = (\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">Sign In</Link>\r\n            </li>\r\n        </ul>\r\n      )\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n                <Link className=\"navbar-brand\" to=\"/\">Pdf Generator Api</Link>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    {isAuthenticated ? authLinks : guestLinks}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));","D:\\WebReact\\fundclient\\src\\setAuthToken.js",[],"D:\\WebReact\\fundclient\\src\\store.js",[],"D:\\WebReact\\fundclient\\src\\components\\Register.js",[],"D:\\WebReact\\fundclient\\src\\actions\\authentication.js",[],"D:\\WebReact\\fundclient\\src\\components\\Login.js",[],"D:\\WebReact\\fundclient\\src\\components\\Home.js",[],"D:\\WebReact\\fundclient\\src\\actions\\types.js",[],"D:\\WebReact\\fundclient\\src\\components\\Layout\\Layout.js",["127","128","129","130","131"],"\r\nimport React, { Component } from 'react';\r\nimport MainInput from '../MainInput/MainInput';\r\nimport Sider from '../Sider/Sider';\r\nimport EditableTable from '../Table/TableDataColums';\r\nimport UpTable from '../UpTable/UpTable';\r\nimport { Input } from 'antd';\r\nimport './Layout.css';\r\nimport Uppload from '../Uppload/Uppload';\r\nimport ButtonSize from '../Download/Download';\r\nimport IdInput from '../IdInput/IdInput';\r\nimport http from \"../http-common\";\r\nimport DocTable from '../DocTable/DocTable';\r\nimport ColumnInput from '../ColumnInput/ColumnInput';\r\nimport NamingTable from '../NamingTable/NamingTable';\r\nvar fileDownload = require('react-file-download');\r\n\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.style = {\r\n            display: props.display\r\n\r\n        }\r\n\r\n        this.state = {\r\n            templateId: '',\r\n            resultArray: [],\r\n            zipFile: null,\r\n            nameArray: [],\r\n            columnName: '',\r\n            preffix:'',\r\n            postfix:'',\r\n\r\n        }\r\n    }\r\n    setPreffix=(value)=>{\r\n        console.log(value);\r\n        this.setState({preffix: value})\r\n    }\r\n    setPostfix=(value)=>{\r\n        console.log(value);\r\n        this.setState({postfix: value})\r\n    }\r\n\r\n    setColumnName = (value) => {\r\n        console.log(value);\r\n        this.setState({ columnName: value });\r\n        console.log(\"kek\");\r\n        console.log(this.state.columnName);\r\n    }\r\n\r\n    setTemplateId = (value) => {\r\n        this.setState({ templateId: value });\r\n        console.log(this.state.templateId);\r\n    }\r\n    setResultArray = (resultArray) => {\r\n        this.setState({ resultArray });\r\n       let obj = resultArray[0];\r\n        for (let i = 0; i < obj.length; i++) {\r\n            let key = Object.values(obj[i])[0];\r\n            let object = { value: key, label: key }\r\n\r\n            this.state.nameArray.push(object);\r\n        }\r\n\r\n        console.log(this.state.nameArray);\r\n    }\r\n\r\n\r\n    printTemplateId = () => {\r\n        console.log(this.state);\r\n        http.post(\"/prejson\", { data: this.state }, { responseType: \"arraybuffer\" }\r\n        ).then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            fileDownload(res.data, 'filename.zip');\r\n\r\n\r\n        })\r\n        console.log(this.state.zipFile);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div style={this.style}>\r\n                {/* <header ></header> */}\r\n\r\n                <div className=\"asmain\">\r\n\r\n                    <aside >\r\n                        <Sider />\r\n                    </aside>\r\n                    <main>\r\n                        {/* <br/>\r\n            <h3>Choose Fund</h3>\r\n            <br/>\r\n            <div className=\"mainInput\">\r\n                <MainInput />\r\n                <Input placeholder=\"New fund name\"  style={{\r\n                        marginLeft: 20,\r\n                        width: 200,\r\n                    }}/>\r\n            </div>\r\n            <br/>\r\n            <h3>Choose document type</h3>\r\n            <br/>\r\n            <div className=\"tableup\" >\r\n                <UpTable />\r\n                </div>\r\n\r\n            <h3>Specify data columns</h3>\r\n                <br/>  */  }      \r\n                {/* <div className=\"tableedit\">\r\n                <EditableTable />\r\n                </div>  */}\r\n                        <br />\r\n                        <h3>Upload Excel/CSV with data</h3>\r\n                        <br />\r\n                        <div className=\"uppload\">\r\n                            <Uppload onUpload={this.setResultArray} />\r\n\r\n                        </div>\r\n\r\n                        <br />\r\n                        <h3>Data Preview</h3>\r\n                        <div><DocTable className=\"docContainer\" onGet={this.state.resultArray} /></div>\r\n                        <br />\r\n\r\n\r\n\r\n                        \r\n                        <h3>Input PDF template #</h3>\r\n                        <br />\r\n\r\n                        <br />\r\n                        <div className=\"pdftemplate\">\r\n                            <IdInput setTemplateId={this.setTemplateId} />\r\n                        </div>\r\n                        <br />\r\n                        <h3>Choose PDF's Naming Column</h3>\r\n                        <br />\r\n                        <br />\r\n                        <div>\r\n                            <NamingTable nameArray={this.state.nameArray} setColumnName={this.setColumnName} setPreffix={this.setPreffix} setPostfix={this.setPostfix} resultArray={this.state.resultArray}/>\r\n                        </div>\r\n\r\n                        <div className=\"nameInput\" style={{\r\n                            marginLeft: 20,\r\n                            width: 200,\r\n                        }}>\r\n                            {/* <ColumnInput onName={this.state.nameArray} setColumnName={this.setColumnName} /> */}\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <br />\r\n                        <div className=\"download\" style={{\r\n                            marginLeft: 20,\r\n                        }}>\r\n                            <ButtonSize onClick={this.printTemplateId} disabled={this.state.templateId.length !== 6 || this.state.resultArray.length === 0 || this.state.columnName.length===0 } />\r\n                            \r\n                        </div>\r\n\r\n\r\n                    </main>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Layout;","D:\\WebReact\\fundclient\\src\\reducers\\index.js",[],"D:\\WebReact\\fundclient\\src\\components\\http-common.js",[],"D:\\WebReact\\fundclient\\src\\components\\MainInput\\MainInput.js",["132"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './MainInput.css';\r\nimport { Input, Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\nclass MainInput extends React.Component {\r\nrender() {\r\n    return (\r\n\r\n    <Select defaultValue=\"Option2-2\">\r\n    <Option value=\"Option2-1\">Option2-1</Option>\r\n    <Option value=\"Option2-2\">Option2-2</Option>\r\n  </Select>\r\n   \r\n\r\n\r\n    )}\r\n}\r\nexport default MainInput;","D:\\WebReact\\fundclient\\src\\components\\Sider\\Sider.js",["133","134","135","136","137","138","139"],"import { Menu, Switch } from 'antd';\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined, FilePdfOutlined  } from '@ant-design/icons';\r\nimport ReactDOM from 'react-dom';\r\nimport React, { Component } from 'react';\r\nimport './Sider.css';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Sider extends React.Component {\r\n  state = {\r\n    theme: 'dark',\r\n    current: '1',\r\n  };\r\n\r\n  changeTheme = value => {\r\n    this.setState({\r\n      theme: value ? 'dark' : 'light',\r\n    });\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <Switch\r\n          checked={this.state.theme === 'dark'}\r\n          onChange={this.changeTheme}\r\n          checkedChildren=\"Dark\"\r\n          unCheckedChildren=\"Light\"\r\n        /> */}\r\n        \r\n        <Menu\r\n          theme={this.state.theme}\r\n          onClick={this.handleClick}\r\n          style={{ width: 256 },{height:'100vh'}}\r\n          defaultOpenKeys={['sub1']}\r\n          selectedKeys={[this.state.current]}\r\n          mode=\"inline\"\r\n        >\r\n          <SubMenu key=\"sub1\" icon={<FilePdfOutlined />} title=\"Create PDF\">\r\n            <Menu.Item key=\"1\">Upload data</Menu.Item>\r\n            {/* <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item> */}\r\n          </SubMenu>\r\n          {/* <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation \">\r\n            <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n            <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n            <SubMenu key=\"sub3\" title=\"Submenu\">\r\n              <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n              <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n            </SubMenu>\r\n          </SubMenu>\r\n          <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation \">\r\n            <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n            <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n            <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n            <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n          </SubMenu> */}\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//ReactDOM.render(<Sider />, mountNode);\r\n\r\nexport default Sider;","D:\\WebReact\\fundclient\\src\\components\\Download\\Download.js",[],"D:\\WebReact\\fundclient\\src\\components\\Table\\TableDataColums.js",["140"],"\r\nimport React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Table.css';\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from 'antd';\r\nimport {DeleteOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'Column name',\r\n                dataIndex: 'ColumnName',\r\n                width: '30%',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'Data type',\r\n                dataIndex: 'DataType',\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n                        <Select defaultValue=\"Abc\">\r\n                            <Option value=\"Abc\">Abc</Option>\r\n                            <Option value=\"123\">123</Option>\r\n                            <Option value=\"%\">%</Option>\r\n\r\n                        </Select>\r\n                    </div>\r\n\r\n            },\r\n\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'operation',\r\n                render: (_, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                            <a><DeleteOutlined /></a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: '0',\r\n                    ColumnName: 'Investor #',\r\n                    DataType: 'Abc',\r\n\r\n                },\r\n                {\r\n                    key: '1',\r\n                    ColumnName: 'Investor Name',\r\n                    DataType: 'Abc',\r\n                },\r\n            ],\r\n            count: 2,\r\n        };\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: '32',\r\n\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                    pagination={{ defaultPageSize: 10, hideOnSinglePage: true }}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                />\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n\r\n                    style={{\r\n                        marginLeft: 0,\r\n                        marginTop: 10,\r\n                      \r\n                    }}\r\n                >\r\n                    Add a row\r\n          </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable;\r\n\r\n","D:\\WebReact\\fundclient\\src\\components\\UpTable\\UpTable.js",["141","142","143","144","145","146","147","148","149","150"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Popconfirm, Form, Select, DatePicker, Space } from 'antd';\r\nconst { Option } = Select;\r\n\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\n\r\nclass UpTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            // {\r\n            //     title: 'Fund',\r\n            //     dataIndex: 'name',\r\n            //     width: '20%',\r\n            //     render: () =>\r\n            //         <div className=\"site-input-group-wrapper\">\r\n            //             <Select defaultValue=\"Abc\">\r\n            //                 <Option value=\"Abc\">Abc</Option>\r\n            //                 <Option value=\"123\">123</Option>\r\n            //                 <Option value=\"%\">%</Option>\r\n\r\n            //             </Select>\r\n            //         </div>\r\n            // },\r\n            {\r\n                title: 'Document type',\r\n                dataIndex: 'DocumentType',\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n                        <Select defaultValue=\"CapitalCall\"    style={{ minWidth: 160,}} onChange={value => this.setState({\r\n                            docType: value\r\n                        })}>\r\n                            <Option value=\"CapitalCall\">Capital Call</Option> //Numeric\r\n                            <Option value=\"CapitalAccount\">Capital Account</Option> //Periodic\r\n                            <Option value=\"CatchUpCall\">Catch-Up Call</Option> //Numeric \r\n                            <Option value=\"K1\">K-1</Option> //Periodic\r\n\r\n                        </Select>\r\n                    </div>\r\n            },\r\n            {\r\n                title: 'Periodic or Numeric?',\r\n                dataIndex: 'PeriodicorNumeric',\r\n                render: () =>\r\n                       \r\n                    <div >\r\n                        \r\n                       \r\n                        {this.checkTableValue(this.state.docType)}\r\n                        </div>\r\n\r\n\r\n            },\r\n            {\r\n                title: 'Document Number',\r\n                dataIndex: 'DocumentNumber',\r\n                name: 'documentNumber',\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n\r\n                        <Select defaultValue=\"1\">\r\n                            <Option value=\"1\">1</Option>\r\n                            <Option value=\"2\">2</Option>\r\n                            <Option value=\"3\">3</Option>\r\n                            <Option value=\"4\">4</Option>\r\n                            <Option value=\"5\">5</Option>\r\n                            <Option value=\"6\">6</Option>\r\n                            <Option value=\"7\">7</Option>\r\n                            <Option value=\"8\">8</Option>\r\n                            <Option value=\"9\">9</Option>\r\n                            <Option value=\"10\">10</Option>\r\n                            <Option value=\"11\">11</Option>\r\n                            <Option value=\"12\">12</Option>\r\n                            <Option value=\"13\">13</Option>\r\n                            <Option value=\"14\">14</Option>\r\n                            <Option value=\"15\">15</Option>\r\n                            <Option value=\"16\">16</Option>\r\n                            <Option value=\"17\">17</Option>\r\n                            <Option value=\"18\">18</Option>\r\n                            <Option value=\"19\">19</Option>\r\n                            <Option value=\"20\">20</Option>\r\n                        </Select>\r\n\r\n\r\n                    </div>\r\n            }, {\r\n                title: 'Quarter',\r\n                dataIndex: 'quarter',\r\n                name: 'quarter',\r\n\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n\r\n                        <Select defaultValue=\"Q1\">\r\n                            <Option value=\"Q1\">Q1</Option>\r\n                            <Option value=\"Q2\">Q2</Option>\r\n                            <Option value=\"Q3\">Q3</Option>\r\n                            <Option value=\"Q4\">Q4</Option>\r\n                        </Select>\r\n\r\n                    </div>\r\n\r\n            }, {\r\n                title: 'Year',\r\n                dataIndex: 'year',\r\n                name: 'year',\r\n\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n\r\n                        <Space direction=\"vertical\" size={12}>\r\n                            <DatePicker picker=\"year\" bordered={false} />\r\n                        </Space>\r\n\r\n\r\n                    </div>\r\n\r\n            },\r\n            {\r\n                title: 'Name the ',\r\n                dataIndex: 'DocumentName',\r\n                editable: true,\r\n                render:() => \r\n                <Input placeholder=\"Basic usage\"  style={{\r\n                    marginLeft: 20,\r\n                }}/>\r\n            },\r\n\r\n        ];\r\n        this.state = {\r\n            docType: \" \",\r\n            dataSource: [\r\n                {\r\n                  \r\n                },\r\n            ],\r\n            count: 1,\r\n        };\r\n    }\r\n    checkType() {\r\n        if (this.checkTableValue(this.state.docType) === \"numeric\") {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    checkTableValue(value) {\r\n        console.log(value);\r\n        if (value == \"CapitalCall\") {\r\n            return (\"Numeric\")\r\n        } else if (value == \"CatchUpCall\") {\r\n            return (\"Numeric\")\r\n        } else if (value == \"CapitalAccount\") {\r\n            return (\"Periodic\")\r\n        } else if (value == \"K1\") {\r\n            return (\"Periodic\")\r\n        }\r\n    }\r\n\r\n\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n    \r\n\r\n           //const columnsToPassToTable =  this.columns.filter(column => this.checkTableValue(this.state.docType) !== 'Periodic' || column.name !== 'documentNumber');\r\n          \r\n    render() {\r\n        \r\n        const columnsToPassToTable = this.columns.filter(column => {\r\n            if (this.checkTableValue(this.state.docType) === 'Periodic') {\r\n               return column.name !== 'documentNumber';\r\n             }\r\n           \r\n             if (this.checkTableValue(this.state.docType) === 'Numeric') {\r\n               return column.name !== 'quarter' && column.name !== 'year';\r\n             }\r\n           \r\n             return true;\r\n           })\r\n        const { dataSource } = this.state;\r\n        console.log(dataSource);\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columnsToPassToTable}\r\n                    pagination={{ defaultPageSize: 10, hideOnSinglePage: true }}\r\n                    style={{\r\n                        margin: 20,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UpTable;","D:\\WebReact\\fundclient\\src\\components\\IdInput\\IdInput.js",["151"],"\r\nimport React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\nimport './IdInput.css';\r\n\r\nconst IdInput = ({ setTemplateId }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Input placeholder=\"Input Temlate #\" style={{\r\n                marginLeft: 20,\r\n                width: 200,\r\n            }} onChange={(e) => setTemplateId(e.target.value)} />\r\n        </div>\r\n    )\r\n}\r\nexport default IdInput;","D:\\WebReact\\fundclient\\src\\components\\NamingTable\\NamingTable.js",["152","153","154","155"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './NamingTable.css';\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport ColumnInput from '../ColumnInput/ColumnInput';\r\nimport RenderCell from '../RenderCell';\r\nconst { Option } = Select;\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass NamingTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'Preffix',\r\n                dataIndex: 'preffix',\r\n                width: '30%',\r\n                editable: true,\r\n\r\n\r\n            },\r\n            {\r\n                title: 'Column Value',\r\n                dataIndex: 'Columnvalue',\r\n\r\n                render: () =>\r\n                    <div className=\"site-input-group-wrapper\">\r\n                        {/* <Select defaultValue=\"Abc\">\r\n                            <Option value=\"Abc\">Abc</Option>\r\n                            <Option value=\"123\">123</Option>\r\n                            <Option value=\"%\">%</Option>\r\n\r\n                        </Select> */}\r\n\r\n                        <ColumnInput onName={this.props.nameArray} setColumnName={this.props.setColumnName} resultArray={this.props.resultArray} setFirstElement={this.setFirstElement} />\r\n                    </div>\r\n\r\n            },\r\n\r\n            {\r\n                title: 'Postfix',\r\n                dataIndex: 'postfix',\r\n                width: '30%',\r\n                editable: true,\r\n\r\n\r\n\r\n            },\r\n\r\n\r\n            {\r\n                title: 'PDF name example',\r\n                dataIndex: 'PDFnameexample',\r\n                width: '30%',\r\n                render: () =>\r\n                    <div>\r\n                      <RenderCell preffixAndPostfix={this.state}  />          \r\n                    </div>\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    // preffix: this.props.preffix,\r\n                    // postfix: this.props.postfix,\r\n\r\n                },\r\n\r\n            ],\r\n            count: 1,\r\n            firstElement: '',\r\n\r\n        };\r\n    }\r\n \r\n    setFirstElement = (value) => {\r\n        console.log(value);\r\n        this.setState({ firstElement: value });\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: '32',\r\n\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        console.log(newData[0].preffix);\r\n        console.log(item);\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n        this.props.setPreffix(newData[0].preffix);\r\n        this.props.setPostfix(newData[0].postfix);\r\n        \r\n\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                    pagination={{ defaultPageSize: 10, hideOnSinglePage: true }}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NamingTable;","D:\\WebReact\\fundclient\\src\\components\\Uppload\\Uppload.js",["156","157","158","159"],"'use strict';\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Uppload.css';\r\nimport { Upload, message, Button} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport XLSX from \"xlsx\";\r\n\r\n\r\n\r\n\r\n\r\n// const props = {\r\n  // accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  // name: 'file',\r\n  // headers: {\r\n  //   authorization: 'authorization-text',\r\n  // },\r\n\r\n//   showUploadList: true,\r\n//   onChange(info) {\r\n//     if (info.file.status !== 'uploading') {\r\n//       console.log(info.file, info.fileList);\r\n//     }\r\n//     if (info.file.status === 'done') {\r\n//       message.success(`${info.file.name} file uploaded successfully`);\r\n//     } else if (info.file.status === 'error') {\r\n//       message.error(`${info.file.name} file upload failed.`);\r\n//     }\r\n//   },\r\n//   beforeUpload: (file, fileList) => {\r\n\r\n//     var rABS = true;\r\n//     const f = fileList[0];\r\n//     var reader = new FileReader();\r\n//     reader.onload = function (e) {\r\n//       var data = e.target.result;\r\n\r\n//       var workbook = XLSX.read(data, {\r\n//         type: rABS ? 'binary' : 'array'\r\n//       });\r\n//       var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n//       var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\r\n\r\n//       let resultArray = [];\r\n//       console.log(jsonArr);\r\n//       console.log(jsonArr.length);\r\n//       console.log(jsonArr[0].length);\r\n//       for (let i = 1; i < jsonArr.length; i++) {\r\n//         var objArray = [];\r\n//         for (let j = 0; j < jsonArr[0].length; j++) {\r\n//           var obj = new Object;\r\n//           obj = { key: jsonArr[0][j], value: jsonArr[i][j] };\r\n//           objArray.push(obj);\r\n//         }\r\n//         resultArray.push(objArray);\r\n\r\n//       }\r\n//       console.log(resultArray);\r\n\r\n//       http.post(\"/prejson\", resultArray);\r\n\r\n//     };\r\n//     if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n//     return false;\r\n//   }\r\n\r\n// };\r\n\r\nconst UPLOAD_PROPS = {\r\n  accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  name: 'file',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Uppload extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.beforeUpload = this.beforeUpload.bind(this);\r\n    this.fileInput = React.createRef();     \r\n    \r\n  }\r\n\r\n\r\n  handleChange(info) {\r\n    \r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList,\"arsi\");\r\n     \r\n    }\r\n   \r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  \r\n    \r\n  \r\n  }\r\n  \r\n\r\n  beforeUpload(file, fileList) {\r\n    var rABS = true;\r\n    const f = fileList[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n   \r\n      var data = e.target.result;\r\n\r\n      var workbook = XLSX.read(data, {\r\n        type: rABS ? 'binary' : 'array'\r\n      });\r\n      var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      var jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\r\n     \r\n\r\n      let resultArray = [];\r\n      console.log(jsonArr);\r\n      console.log(jsonArr.length);\r\n      console.log(jsonArr[0].length);\r\n      for (let i = 1; i < jsonArr.length; i++) {\r\n        var objArray = [];\r\n        for (let j = 0; j < jsonArr[0].length; j++) {\r\n          var obj = new Object;\r\n          obj = { key: jsonArr[0][j], value: jsonArr[i][j] };\r\n          objArray.push(obj);\r\n        }\r\n        resultArray.push(objArray);\r\n\r\n      }\r\n\r\n      this.props.onUpload?.(resultArray);\r\n\r\n      // http.post(\"/prejson\", resultArray);\r\n\r\n    }.bind(this);\r\n    if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);\r\n    return false;\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n            \r\n    return (\r\n\r\n      <Upload\r\n        {...UPLOAD_PROPS}\r\n        onChange={this.handleChange}\r\n        beforeUpload={this.beforeUpload}\r\n        maxCount={1}\r\n       \r\n      \r\n        \r\n      >\r\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n     \r\n        {/* <input\r\n          type=\"file\"\r\n          hidden\r\n          accept={SheetJSFT}\r\n          ref={this.fileInput}\r\n          onChange={this.handleChange}\r\n\r\n        /> */}\r\n      </Upload>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst SheetJSFT = [\r\n  \"xlsx\",\r\n  \"xlsm\",\r\n  \"xls\",\r\n  \"csv\",\r\n\r\n]\r\nexport default Uppload;","D:\\WebReact\\fundclient\\src\\components\\DocTable\\DocTable.js",["160"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\n\r\nconst DocTable = ({ onGet }) => {\r\n\r\n    let docArray = onGet;\r\n    let columnArray = [];\r\n    let headerArray = [];\r\n    let dataArray = [];\r\n    let columns = [];\r\n    let data = [];\r\n\r\n   // console.log(docArray);\r\n    headerArray = docArray[0];\r\n    //console.log(headerArray);\r\n    for (var key in headerArray) {\r\n        let s = headerArray[key];\r\n\r\n        columnArray.push(Object.values(s)[0]);\r\n    }\r\n    console.log(columnArray);\r\n\r\n    for (let i = 0; i < docArray.length; i++) {\r\n        dataArray = docArray[i];\r\n        let object = new Object();\r\n        for (let j = 0; j < dataArray.length; j++) {\r\n            let fKey;\r\n            let fValue;\r\n            fKey = Object.values(dataArray[j])[0];\r\n         \r\n          //  console.log(fKey);\r\n            fValue = Object.values(dataArray[j])[1];\r\n          //  console.log(fValue);\r\n            var propertyName = fKey;\r\n           object[propertyName] = fValue;\r\n        }\r\n        object.key = i;\r\n        //console.log(object);\r\n        \r\n        data.push(object);\r\n    }\r\n  //  console.log(data);\r\n\r\n    for (let i = 0; i < columnArray.length; i++) {\r\n\r\n        columns.push(\r\n            {\r\n                title: columnArray[i],\r\n                dataIndex: columnArray[i],\r\n                width: '100vw'/i,\r\n                align: 'center',\r\n                margin: '1em'\r\n                \r\n              \r\n                \r\n            }\r\n        )\r\n    }\r\n    console.log(columns);\r\n    //    let columns = [\r\n\r\n\r\n    //         {\r\n    //           title: 'Name',\r\n    //           dataIndex: 'name',\r\n    //           width: 150,\r\n    //         },\r\n    //         {\r\n    //           title: 'Age',\r\n    //           dataIndex: 'age',\r\n    //           width: 150,\r\n    //         },\r\n    //         {\r\n    //           title: 'Address',\r\n    //           dataIndex: 'address',\r\n    //         },\r\n    //       ];\r\n\r\n\r\n\r\n    // for (let i = 0; i < 100; i++) {\r\n    //   data.push({\r\n    //     key: i,\r\n    //     name: `Edward King ${i}`,\r\n    //     age: 32,\r\n    //     address: `London, Park Lane no. ${i}`,\r\n    //   });\r\n    // }\r\n\r\n    return (\r\n\r\n        <Table  columns={columns} dataSource={data} pagination={{ pageSize: 50 }} scroll={{ y: 240 }} />\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default DocTable;","D:\\WebReact\\fundclient\\src\\components\\ColumnInput\\ColumnInput.js",[],"D:\\WebReact\\fundclient\\src\\reducers\\authReducer.js",["161"],"import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../validation/is-empty';\r\n\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nexport default function(state = initialState, action ) {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","D:\\WebReact\\fundclient\\src\\reducers\\errorReducer.js",["162"],"import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action ) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    }\r\n}","D:\\WebReact\\fundclient\\src\\components\\RenderCell.js",[],"D:\\WebReact\\fundclient\\src\\validation\\is-empty.js",[],{"ruleId":"163","severity":1,"message":"164","line":21,"column":17,"nodeType":"165","endLine":21,"endColumn":85},{"ruleId":"166","severity":1,"message":"167","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":17},{"ruleId":"166","severity":1,"message":"170","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":21},{"ruleId":"166","severity":1,"message":"171","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":15},{"ruleId":"166","severity":1,"message":"172","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":15},{"ruleId":"166","severity":1,"message":"173","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":19},{"ruleId":"166","severity":1,"message":"172","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":15},{"ruleId":"166","severity":1,"message":"174","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":22},{"ruleId":"166","severity":1,"message":"175","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":22},{"ruleId":"166","severity":1,"message":"176","line":2,"column":24,"nodeType":"168","messageId":"169","endLine":2,"endColumn":40},{"ruleId":"166","severity":1,"message":"177","line":2,"column":42,"nodeType":"168","messageId":"169","endLine":2,"endColumn":57},{"ruleId":"166","severity":1,"message":"178","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":16},{"ruleId":"166","severity":1,"message":"179","line":4,"column":17,"nodeType":"168","messageId":"169","endLine":4,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":42,"column":32,"nodeType":"182","messageId":"183","endLine":42,"endColumn":33},{"ruleId":"163","severity":1,"message":"184","line":125,"column":29,"nodeType":"165","endLine":125,"endColumn":32},{"ruleId":"166","severity":1,"message":"185","line":2,"column":24,"nodeType":"168","messageId":"169","endLine":2,"endColumn":34},{"ruleId":"186","severity":1,"message":"187","line":120,"column":78,"nodeType":"188","endLine":121,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":121,"column":84,"nodeType":"188","endLine":122,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":122,"column":79,"nodeType":"188","endLine":123,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":123,"column":60,"nodeType":"188","endLine":125,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":238,"column":19,"nodeType":"191","messageId":"192","endLine":238,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":240,"column":26,"nodeType":"191","messageId":"192","endLine":240,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":242,"column":26,"nodeType":"191","messageId":"192","endLine":242,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":244,"column":26,"nodeType":"191","messageId":"192","endLine":244,"endColumn":28},{"ruleId":"166","severity":1,"message":"193","line":284,"column":15,"nodeType":"168","messageId":"169","endLine":284,"endColumn":22},{"ruleId":"166","severity":1,"message":"179","line":2,"column":17,"nodeType":"168","messageId":"169","endLine":2,"endColumn":26},{"ruleId":"166","severity":1,"message":"194","line":4,"column":24,"nodeType":"168","messageId":"169","endLine":4,"endColumn":30},{"ruleId":"166","severity":1,"message":"185","line":4,"column":32,"nodeType":"168","messageId":"169","endLine":4,"endColumn":42},{"ruleId":"166","severity":1,"message":"195","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":24},{"ruleId":"166","severity":1,"message":"196","line":8,"column":9,"nodeType":"168","messageId":"169","endLine":8,"endColumn":15},{"ruleId":"197","severity":1,"message":"198","line":1,"column":1,"nodeType":"199","messageId":"200","endLine":1,"endColumn":14,"fix":"201"},{"ruleId":"202","severity":1,"message":"203","line":133,"column":21,"nodeType":"204","messageId":"205","endLine":133,"endColumn":31,"fix":"206"},{"ruleId":"207","severity":1,"message":"208","line":133,"column":21,"nodeType":"204","messageId":"209","endLine":133,"endColumn":31},{"ruleId":"166","severity":1,"message":"210","line":181,"column":7,"nodeType":"168","messageId":"169","endLine":181,"endColumn":16},{"ruleId":"207","severity":1,"message":"208","line":26,"column":22,"nodeType":"204","messageId":"209","endLine":26,"endColumn":34},{"ruleId":"211","severity":1,"message":"212","line":10,"column":1,"nodeType":"213","endLine":21,"endColumn":2},{"ruleId":"211","severity":1,"message":"212","line":5,"column":1,"nodeType":"213","endLine":12,"endColumn":2},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'MainInput' is defined but never used.","Identifier","unusedVar","'EditableTable' is defined but never used.","'UpTable' is defined but never used.","'Input' is defined but never used.","'ColumnInput' is defined but never used.","'Switch' is defined but never used.","'MailOutlined' is defined but never used.","'AppstoreOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'ReactDOM' is defined but never used.","'Component' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Popconfirm' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'columns' is assigned a value but never used.","'Button' is defined but never used.","'DeleteOutlined' is defined but never used.","'Option' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"214","text":"215"},"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"216","text":"217"},"no-new-object","The object literal notation {} is preferrable.","preferLiteral","'SheetJSFT' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",[0,13],"",[3635,3635],"()"]